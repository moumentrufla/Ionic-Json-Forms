"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const _ = __importStar(require("lodash"));
const redux_mock_store_1 = __importDefault(require("redux-mock-store"));
const uischemas_1 = require("../../src/reducers/uischemas");
const actions_1 = require("../../src/actions");
const reducers_1 = require("../../src/reducers");
const generators_1 = require("../../src/generators");
ava_1.default('init state empty', t => {
    const dummyAction = {
        type: 'jsonforms/REMOVE_UI_SCHEMA',
        tester: undefined
    };
    t.deepEqual(uischemas_1.uischemaRegistryReducer(undefined, dummyAction), []);
});
ava_1.default('add ui schema', t => {
    const tester = () => 1;
    const control = {
        type: 'Control',
        scope: '#/definitions/foo'
    };
    const after = uischemas_1.uischemaRegistryReducer(undefined, actions_1.registerUISchema(tester, control));
    t.is(after.length, 1);
});
ava_1.default('remove ui schema', t => {
    const tester = () => 1;
    const control = {
        type: 'Control',
        scope: '#/definitions/foo'
    };
    const after = uischemas_1.uischemaRegistryReducer([
        {
            tester,
            uischema: control
        }
    ], actions_1.unregisterUISchema(tester));
    t.is(after.length, 0);
});
ava_1.default('findMatchingUISchema', t => {
    const testerA = (_schema, schemaPath) => _.endsWith(schemaPath, 'foo') ? 1 : 0;
    const testerB = (_schema, schemaPath) => _.endsWith(schemaPath, 'bar') ? 1 : 0;
    const controlA = {
        type: 'Control',
        scope: '#/definitions/foo'
    };
    const controlB = {
        type: 'Control',
        scope: '#/definitions/bar'
    };
    const before = [
        {
            tester: testerA,
            uischema: controlA
        },
        {
            tester: testerB,
            uischema: controlB
        }
    ];
    t.deepEqual(uischemas_1.findMatchingUISchema(before)(undefined, '#/defintions/foo', undefined), controlA);
    t.deepEqual(uischemas_1.findMatchingUISchema(before)(undefined, '#/defintions/bar', undefined), controlB);
});
ava_1.default('findUISchema returns generated UI schema if no match has been found', t => {
    const middlewares = [];
    const mockStore = redux_mock_store_1.default(middlewares);
    const store = mockStore({
        jsonforms: {
            core: {
                schema: {
                    definitions: {
                        baz: {
                            type: 'number'
                        }
                    }
                },
                data: undefined,
                uischema: undefined
            },
            uischemas: []
        }
    });
    t.deepEqual(reducers_1.findUISchema(store.getState())(reducers_1.getSchema(store.getState()), '#/definitions/baz', undefined), generators_1.Generate.uiSchema(reducers_1.getSchema(store.getState())));
});
ava_1.default('findMatchingUISchema with highest priority', t => {
    const testerA = (_schema, schemaPath) => _.endsWith(schemaPath, 'foo') ? 2 : 0;
    const testerB = (_schema, schemaPath) => _.endsWith(schemaPath, 'foo') ? 1 : 0;
    const controlA = {
        type: 'Control',
        scope: '#/definitions/foo'
    };
    const controlB = {
        type: 'Control',
        scope: '#/definitions/foo'
    };
    const before = [
        {
            tester: testerA,
            uischema: controlA
        },
        {
            tester: testerB,
            uischema: controlB
        }
    ];
    t.deepEqual(uischemas_1.findMatchingUISchema(before)(undefined, '#/definitions/foo', undefined), controlA);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWlzY2hlbWFzLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZXN0L3JlZHVjZXJzL3Vpc2NoZW1hcy50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLDhDQUF1QjtBQUN2QiwwQ0FBNEI7QUFFNUIsd0VBQThDO0FBQzlDLDREQUlzQztBQUN0QywrQ0FJMkI7QUFDM0IsaURBQTZEO0FBQzdELHFEQUFnRDtBQUdoRCxhQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLEVBQUU7SUFDM0IsTUFBTSxXQUFXLEdBQXlCO1FBQ3hDLElBQUksRUFBRSw0QkFBNEI7UUFDbEMsTUFBTSxFQUFFLFNBQVM7S0FDbEIsQ0FBQztJQUNGLENBQUMsQ0FBQyxTQUFTLENBQUMsbUNBQXVCLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ25FLENBQUMsQ0FBQyxDQUFDO0FBRUgsYUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUN4QixNQUFNLE1BQU0sR0FBbUIsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sT0FBTyxHQUFHO1FBQ2QsSUFBSSxFQUFFLFNBQVM7UUFDZixLQUFLLEVBQUUsbUJBQW1CO0tBQzNCLENBQUM7SUFDRixNQUFNLEtBQUssR0FBRyxtQ0FBdUIsQ0FDbkMsU0FBUyxFQUNULDBCQUFnQixDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FDbEMsQ0FBQztJQUNGLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN4QixDQUFDLENBQUMsQ0FBQztBQUVILGFBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUMzQixNQUFNLE1BQU0sR0FBbUIsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sT0FBTyxHQUFHO1FBQ2Qs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