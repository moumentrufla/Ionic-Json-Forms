"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
  The MIT License
  
  Copyright (c) 2018 EclipseSource Munich
  https://github.com/eclipsesource/jsonforms
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
const cloneDeep_1 = __importDefault(require("lodash/cloneDeep"));
const set_1 = __importDefault(require("lodash/set"));
const get_1 = __importDefault(require("lodash/get"));
const filter_1 = __importDefault(require("lodash/filter"));
const actions_1 = require("../actions");
const validator_1 = require("../util/validator");
const validate = (validator, data) => {
    const valid = validator(data);
    if (valid) {
        return [];
    }
    return validator.errors;
};
const sanitizeErrors = (validator, data) => validate(validator, data).map(error => {
    error.dataPath = error.dataPath.replace(/\//g, '.').substr(1);
    return error;
});
const alwaysValid = () => true;
const initState = {
    data: {},
    schema: {},
    uischema: undefined,
    errors: [],
    validator: alwaysValid,
    ajv: undefined
};
const getOrCreateAjv = (state, action) => {
    if (action && action.ajv) {
        return action.ajv;
    }
    if (state.ajv) {
        return state.ajv;
    }
    return validator_1.createAjv();
};
exports.coreReducer = (state = initState, action) => {
    switch (action.type) {
        case actions_1.INIT: {
            const thisAjv = getOrCreateAjv(state, action);
            const v = thisAjv.compile(action.schema);
            const e = sanitizeErrors(v, action.data);
            return Object.assign({}, state, { data: action.data, schema: action.schema, uischema: action.uischema, errors: e, validator: v, ajv: thisAjv });
        }
        case actions_1.SET_AJV: {
            const currentAjv = action.ajv;
            const validator = currentAjv.compile(state.schema);
            const errors = sanitizeErrors(validator, state.data);
            return Object.assign({}, state, { validator,
                errors });
        }
        case actions_1.SET_SCHEMA: {
            const v = action.schema && state.ajv
                ? state.ajv.compile(action.schema)
                : state.validator;
            return Object.assign({}, state, { validator: v, schema: action.schema });
        }
        case actions_1.SET_UISCHEMA: {
            return Object.assign({}, state, { uischema: action.uischema });
        }
        case actions_1.UPDATE_DATA: {
            if (action.path === undefined || action.path === null) {
                return state;
            }
            else if (action.path === '') {
                // empty path is ok
                const result = action.updater(cloneDeep_1.default(state.data));
                if (result === undefined || result === null) {
                    return Object.assign({}, state, { data: state.data, uischema: state.uischema, schema: state.schema });
                }
                const errors = sanitizeErrors(state.validator, result);
                return Object.assign({}, state, { data: result, errors });
            }
            else {
                const oldData = get_1.default(state.data, action.path);
                let newData = action.updater(oldData);
                if (newData === '') {
                    newData = undefined;
                }
                const newState = set_1.default(cloneDeep_1.default(state.data), action.path, newData);
                const errors = sanitizeErrors(state.validator, newState);
                return Object.assign({}, state, { data: newState, errors });
            }
        }
        default:
            return state;
    }
};
exports.extractData = (state) => get_1.default(state, 'data');
exports.extractSchema = (state) => get_1.default(state, 'schema');
exports.extractUiSchema = (state) => get_1.default(state, 'uischema');
exports.errorAt = (instancePath) => (state) => {
    return filter_1.default(state.errors, (error) => error.dataPath === instancePath);
};
exports.subErrorsAt = (instancePath) => (state) => {
    const path = `${instancePath}.`;
    return filter_1.default(state.errors, (error) => error.dataPath.startsWith(path));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9yZWR1Y2Vycy9jb3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBdUJFO0FBQ0YsaUVBQXlDO0FBQ3pDLHFEQUE2QjtBQUM3QixxREFBNkI7QUFDN0IsMkRBQW1DO0FBRW5DLHdDQVdvQjtBQUNwQixpREFBOEM7QUFHOUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxTQUEyQixFQUFFLElBQVMsRUFBaUIsRUFBRTtJQUN6RSxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUIsSUFBSSxLQUFLLEVBQUU7UUFDVCxPQUFPLEVBQUUsQ0FBQztLQUNYO0lBRUQsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFDO0FBQzFCLENBQUMsQ0FBQztBQUVGLE1BQU0sY0FBYyxHQUFHLENBQUMsU0FBMkIsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUNoRSxRQUFRLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtJQUNwQyxLQUFLLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFOUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUMsQ0FBQztBQUVMLE1BQU0sV0FBVyxHQUFxQixHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7QUFXakQsTUFBTSxTQUFTLEdBQWtCO0lBQy9CLElBQUksRUFBRSxFQUFFO0lBQ1IsTUFBTSxFQUFFLEVBQUU7SUFDVixRQUFRLEVBQUUsU0FBUztJQUNuQixNQUFNLEVBQUUsRUFBRTtJQUNWLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLEdBQUcsRUFBRSxTQUFTO0NBQ2YsQ0FBQztBQVNGLE1BQU0sY0FB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