"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var core_2 = require("@jsonforms/core");
var store_1 = require("@angular-redux/store");
var angular_1 = require("@jsonforms/angular");
var StringControlRenderer = /** @class */ (function (_super) {
    __extends(StringControlRenderer, _super);
    function StringControlRenderer(ngRedux) {
        var _this = _super.call(this, ngRedux) || this;
        _this.getValue = function () { return _this.data || ''; };
        _this.getType = function () {
            if (_this.uischema.options && _this.uischema.options.format) {
                return _this.uischema.options.format;
            }
            if (_this.scopedSchema && _this.scopedSchema.format) {
                switch (_this.scopedSchema.format) {
                    case 'email':
                        return 'email';
                    case 'tel':
                        return 'tel';
                    default:
                        return 'text';
                }
            }
            return 'text';
        };
        return _this;
    }
    StringControlRenderer = __decorate([
        core_1.Component({
            selector: 'jsonforms-string-control',
            template: "\n    <ion-item no-padding no-lines [hidden]=\"hidden\">\n      <ion-label floating>{{ label }}</ion-label>\n      <ion-input\n        type=\"text\"\n        (ionChange)=\"onChange($event)\"\n        [value]=\"getValue()\"\n        placeholder=\"{{ description }}\"\n        [id]=\"id\"\n        [formControl]=\"form\"\n        [type]=\"getType()\"\n      >\n      </ion-input>\n      <ion-label stacked *ngIf=\"error\" color=\"error\">{{ error }}</ion-label>\n    </ion-item>\n  "
        }),
        __metadata("design:paramtypes", [store_1.NgRedux])
    ], StringControlRenderer);
    return StringControlRenderer;
}(angular_1.JsonFormsControl));
exports.StringControlRenderer = StringControlRenderer;
exports.stringControlTester = core_2.rankWith(1, core_2.isStringControl);
//# sourceMappingURL=string-control.js.map