import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import { TranslationConfig } from '../models/l10n-config';
/**
 * Implement this class-interface to create a custom provider for translation data.
 */
export declare abstract class TranslationProvider {
    /**
     * This method must contain the logic of data access.
     * @param language The current language
     * @param args The object set during the configuration of 'providers'
     * @return An observable of an object of translation data: {key: value}
     */
    abstract getTranslation(language: string, args: any): Observable<any>;
}
export declare class HttpTranslationProvider implements TranslationProvider {
    private configuration;
    private http;
    private cache;
    constructor(configuration: TranslationConfig, http: HttpClient);
    getTranslation(language: string, args: any): Observable<any>;
    private caching(key, request);
}
