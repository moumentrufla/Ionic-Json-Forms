import { OnInit } from '@angular/core';
import { FormControl, Validator, ValidatorFn, ValidationErrors } from '@angular/forms';
/**
 * Function that takes a control and returns either null when it’s valid, or an error object if it’s not.
 * @param digits The format of the number
 * @param MIN_VALUE The minimum value for the number
 * @param MAX_VALUE The maximum value for the number
 * @return An error object: 'format', 'minValue' or 'maxValue'; null in case the value is valid
 */
export declare function l10nValidateNumber(digits: string, MIN_VALUE?: number, MAX_VALUE?: number): ValidatorFn;
export declare class L10nNumberValidatorDirective implements Validator, OnInit {
    /**
     * Format: {minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}.
     */
    l10nValidateNumber: string;
    digits: string;
    minValue: number;
    maxValue: number;
    private readonly MIN_VALUE;
    private readonly MAX_VALUE;
    private validator;
    ngOnInit(): void;
    validate(formControl: FormControl): ValidationErrors | null;
}
