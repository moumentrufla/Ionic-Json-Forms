{"version":3,"file":"angular-l10n.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/models/injector-ref.ts","../../src/models/l10n-config.ts","../../src/services/intl-api.ts","../../src/services/locale-storage.ts","../../src/models/default-locale.ts","../../src/services/locale.service.ts","../../src/services/translation-provider.ts","../../src/services/translation-handler.ts","../../src/models/merge-deep.ts","../../src/services/translation.service.ts","../../src/services/l10n-loader.ts","../../src/services/translation.ts","../../src/services/localization.ts","../../src/services/locale-validation.ts","../../src/services/collator.ts","../../src/decorators/language.decorator.ts","../../src/decorators/default-locale.decorator.ts","../../src/decorators/currency.decorator.ts","../../src/decorators/timezone.decorator.ts","../../src/pipes/translate.pipe.ts","../../src/models/intl-formatter.ts","../../src/pipes/l10n-date.pipe.ts","../../src/pipes/l10n-number.pipe.ts","../../src/models/bfs.ts","../../src/models/base-directive.ts","../../src/directives/translate.directive.ts","../../src/directives/l10n-date.directive.ts","../../src/directives/l10n-number.directive.ts","../../src/directives/l10n-number-validator.directive.ts","../../src/modules/translation.module.ts","../../src/modules/localization.module.ts","../../src/modules/locale-validation.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","import { Injectable, Injector } from \"@angular/core\";\r\n\r\nimport { Type } from './types';\r\n\r\n/**\r\n * Allows to get the dependencies at the module level or component.\r\n */\r\n@Injectable() export class InjectorRef {\r\n\r\n    private static injector: any = null;\r\n\r\n    public static get<T>(token: Type<T>): T {\r\n        return InjectorRef.injector.get(token);\r\n    }\r\n\r\n    constructor(private injector: Injector) {\r\n        InjectorRef.injector = this.injector;\r\n    }\r\n\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { Type, DefaultLocaleCodes, Language, StorageStrategy, ISOCode } from './types';\r\n\r\nexport const LOCALE_CONFIG: InjectionToken<LocaleConfig> =\r\n    new InjectionToken<LocaleConfig>('LOCALE_CONFIG');\r\nexport const TRANSLATION_CONFIG: InjectionToken<TranslationConfig> =\r\n    new InjectionToken<TranslationConfig>('TRANSLATION_CONFIG');\r\n\r\nexport interface LocaleConfig {\r\n    /**\r\n     * Adds the languages to use in the app.\r\n     */\r\n    languages?: Language[];\r\n\r\n    /**\r\n     * Defines the language ISO 639 two-letter or three-letter code to be used,\r\n     * if the language is not found in the browser.\r\n     */\r\n    language?: string;\r\n\r\n    /**\r\n     * Defines the default locale to be used, regardless of the browser language.\r\n     */\r\n    defaultLocale?: DefaultLocaleCodes;\r\n\r\n    /**\r\n     * Defines the currency ISO 4217 three-letter code to be used.\r\n     */\r\n    currency?: string;\r\n\r\n    /**\r\n     * The time zone name of the IANA time zone database to use.\r\n     */\r\n    timezone?: string;\r\n\r\n    /**\r\n     * Defines the storage to be used for language, default locale & currency. Default is cookie.\r\n     */\r\n    storage?: StorageStrategy;\r\n\r\n    /**\r\n     * If the cookie expiration is omitted, the cookie becomes a session cookie.\r\n     */\r\n    cookieExpiration?: number;\r\n}\r\n\r\nexport interface TranslationConfig {\r\n    /**\r\n     * Direct loading: adds translation data.\r\n     */\r\n    translationData?: Array<{\r\n        /**\r\n         * ISO 639 two-letter or three-letter code.\r\n         */\r\n        languageCode: string;\r\n\r\n        /**\r\n         * Translation data of the language.\r\n         */\r\n        data: any;\r\n    }>;\r\n\r\n    /**\r\n     * Asynchronous loading: adds translation providers.\r\n     */\r\n    providers?: any[];\r\n\r\n    /**\r\n     * Asynchronous loading: disables/enables the cache for translation providers.\r\n     */\r\n    caching?: Boolean;\r\n\r\n    /**\r\n     * Sets a composed language for translations.\r\n     */\r\n    composedLanguage?: ISOCode[];\r\n\r\n    /**\r\n     * Sets the value or the function to use for missing keys.\r\n     */\r\n    missingValue?: string | ((path: string) => string);\r\n\r\n    /**\r\n     * Sets the key to use for missing keys.\r\n     */\r\n    missingKey?: string;\r\n\r\n    /**\r\n     * Sets composed key separator.\r\n     */\r\n    composedKeySeparator?: string;\r\n\r\n    /**\r\n     * Disables/enables the translation of numbers that are contained at the beginning of the keys.\r\n     */\r\n    i18nPlural?: boolean;\r\n}\r\n\r\nexport interface L10nConfig {\r\n    /**\r\n     * LocaleService configuration.\r\n     */\r\n    locale?: LocaleConfig;\r\n    /**\r\n     * TranslationService configuration.\r\n     */\r\n    translation?: TranslationConfig;\r\n}\r\n\r\nexport interface Token {\r\n    /**\r\n     * Defines the locale storage to be used.\r\n     */\r\n    localeStorage?: Type<any>;\r\n    /**\r\n     * Defines the translation provider to be used.\r\n     */\r\n    translationProvider?: Type<any>;\r\n    /**\r\n     * Defines the translation handler to be used.\r\n     */\r\n    translationHandler?: Type<any>;\r\n}\r\n","/**\r\n * Provides the methods to check if Intl APIs are supported.\r\n */\r\nexport class IntlAPI {\r\n\r\n    public static hasIntl(): boolean {\r\n        const hasIntl: boolean = typeof Intl === \"object\" && !!Intl;\r\n        return hasIntl;\r\n    }\r\n\r\n    public static hasDateTimeFormat(): boolean {\r\n        return IntlAPI.hasIntl() && Intl​.hasOwnProperty​(\"DateTimeFormat\");\r\n    }\r\n\r\n    public static hasTimezone(): boolean {\r\n        if (IntlAPI.hasIntl() && IntlAPI.hasDateTimeFormat()) {\r\n            try {\r\n                new Intl.DateTimeFormat('en-US', { timeZone: 'America/Los_Angeles' }).format(new Date());\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static hasNumberFormat(): boolean {\r\n        return IntlAPI.hasIntl() && Intl.hasOwnProperty​(\"NumberFormat\");\r\n    }\r\n\r\n    public static hasCollator(): boolean {\r\n        return IntlAPI.hasIntl() && Intl.hasOwnProperty​(\"Collator\");\r\n    }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { LOCALE_CONFIG, LocaleConfig } from '../models/l10n-config';\r\nimport { StorageStrategy } from '../models/types';\r\n\r\n/**\r\n * Implement this class-interface to create a custom storage for default locale, currency & timezone.\r\n */\r\n@Injectable() export abstract class LocaleStorage {\r\n\r\n    /**\r\n     * This method must contain the logic to read the storage.\r\n     * @param name 'defaultLocale', 'currency' or 'timezone'\r\n     * @return A promise with the value of the given name\r\n     */\r\n    public abstract async read(name: string): Promise<string | null>;\r\n\r\n    /**\r\n     * This method must contain the logic to write the storage.\r\n     * @param name 'defaultLocale', 'currency' or 'timezone'\r\n     * @param value The value for the given name\r\n     */\r\n    public abstract async write(name: string, value: string): Promise<void>;\r\n\r\n}\r\n\r\n@Injectable() export class BrowserStorage implements LocaleStorage {\r\n\r\n    private hasCookie: boolean;\r\n    private hasStorage: boolean;\r\n\r\n    constructor( @Inject(LOCALE_CONFIG) private configuration: LocaleConfig) {\r\n        this.hasCookie = typeof navigator !== \"undefined\" && navigator.cookieEnabled;\r\n        this.hasStorage = typeof Storage !== \"undefined\";\r\n    }\r\n\r\n    public async read(name: string): Promise<string | null> {\r\n        let value: string | null = null;\r\n        if (this.configuration.storage != StorageStrategy.Disabled) {\r\n            if (this.configuration.storage == StorageStrategy.Local && this.hasStorage) {\r\n                value = this.getLocalStorage(name);\r\n            } else if (this.configuration.storage == StorageStrategy.Session && this.hasStorage) {\r\n                value = this.getSessionStorage(name);\r\n            } else if (this.configuration.storage == StorageStrategy.Cookie && this.hasCookie) {\r\n                value = this.getCookie(name);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public async write(name: string, value: string): Promise<void> {\r\n        if (this.configuration.storage != StorageStrategy.Disabled) {\r\n            if (this.configuration.storage == StorageStrategy.Local && this.hasStorage) {\r\n                this.setLocalStorage(name, value);\r\n            } else if (this.configuration.storage == StorageStrategy.Session && this.hasStorage) {\r\n                this.setSessionStorage(name, value);\r\n            } else if (this.configuration.storage == StorageStrategy.Cookie && this.hasCookie) {\r\n                this.setCookie(name, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getLocalStorage(name: string): string | null {\r\n        return localStorage.getItem(name);\r\n    }\r\n\r\n    private getSessionStorage(name: string): string | null {\r\n        return sessionStorage.getItem(name);\r\n    }\r\n\r\n    private getCookie(name: string): string | null {\r\n        let result: RegExpExecArray | null = null;\r\n        if (typeof document !== \"undefined\") {\r\n            result = new RegExp(\"(?:^|; )\" + encodeURIComponent(name) + \"=([^;]*)\").exec(document.cookie);\r\n        }\r\n        return result ? result[1] : null;\r\n    }\r\n\r\n    private setLocalStorage(name: string, value: string): void {\r\n        localStorage.setItem(name, value);\r\n    }\r\n\r\n    private setSessionStorage(name: string, value: string): void {\r\n        sessionStorage.setItem(name, value);\r\n    }\r\n\r\n    private setCookie(name: string, value: string): void {\r\n        let expires: string = \"\";\r\n        if (this.configuration.cookieExpiration != null) {\r\n            const expirationDate: Date = new Date();\r\n            expirationDate.setTime(\r\n                expirationDate.getTime() +\r\n                (this.configuration.cookieExpiration * 24 * 60 * 60 * 1000)\r\n            );\r\n            expires = \"; expires=\" + expirationDate.toUTCString();\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n        }\r\n    }\r\n\r\n}\r\n","import { DefaultLocaleCodes } from './types';\r\n\r\nexport class DefaultLocale implements DefaultLocaleCodes {\r\n\r\n    public languageCode: string;\r\n    public scriptCode?: string;\r\n    public countryCode?: string;\r\n    public numberingSystem?: string;\r\n    public calendar?: string;\r\n\r\n    public get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    public set value(defaultLocale: string) {\r\n        this._value = defaultLocale;\r\n        this.parseValue();\r\n    }\r\n\r\n    private _value: string;\r\n\r\n    public build(\r\n        languageCode: string,\r\n        countryCode?: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): void {\r\n        this.languageCode = languageCode;\r\n        this.scriptCode = scriptCode;\r\n        this.countryCode = countryCode;\r\n        this.numberingSystem = numberingSystem;\r\n        this.calendar = calendar;\r\n\r\n        const value: string[] = [];\r\n        value.push(languageCode);\r\n        value.push(!!scriptCode ? \"-\" + scriptCode : \"\");\r\n        value.push(!!countryCode ? \"-\" + countryCode : \"\");\r\n        // Adds the 'u' (Unicode) extension.\r\n        value.push((!!numberingSystem || !!calendar) ? \"-u\" : \"\");\r\n        value.push(!!numberingSystem ? \"-nu-\" + numberingSystem : \"\");\r\n        value.push(!!calendar ? \"-ca-\" + calendar : \"\");\r\n        this._value = value.join(\"\");\r\n    }\r\n\r\n    private parseValue(): void {\r\n        if (!!this.value) {\r\n            let value: string = this.value;\r\n            // Looks for the 'u' (Unicode) extension.\r\n            const index: number = value.search(\"-u\");\r\n            if (index != -1) {\r\n                const extensions: string[] = value.substring(index + 1).split(\"-\");\r\n                switch (extensions.length) {\r\n                    case 3:\r\n                        if (extensions[1] == \"nu\") {\r\n                            this.numberingSystem = extensions[2];\r\n                        } else if (extensions[1] == \"ca\") {\r\n                            this.calendar = extensions[2];\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this.numberingSystem = extensions[2];\r\n                        this.calendar = extensions[4];\r\n                        break;\r\n                }\r\n                // Extracts the codes.\r\n                value = value.substring(0, index);\r\n            }\r\n\r\n            const codes: string[] = value.split(\"-\");\r\n            switch (codes.length) {\r\n                case 1:\r\n                    this.languageCode = codes[0];\r\n                    break;\r\n                case 2:\r\n                    this.languageCode = codes[0];\r\n                    this.countryCode = codes[1];\r\n                    break;\r\n                default:\r\n                    this.languageCode = codes[0];\r\n                    this.scriptCode = codes[1];\r\n                    this.countryCode = codes[2];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable, Inject, EventEmitter, Output } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { IntlAPI } from '../services/intl-api';\r\nimport { LOCALE_CONFIG, LocaleConfig } from '../models/l10n-config';\r\nimport { LocaleStorage } from './locale-storage';\r\nimport { DefaultLocale } from '../models/default-locale';\r\nimport { Language } from '../models/types';\r\n\r\n/**\r\n * Manages language, default locale, currency & timezone.\r\n */\r\nexport interface ILocaleService {\r\n\r\n    languageCodeChanged: EventEmitter<string>;\r\n    defaultLocaleChanged: EventEmitter<string>;\r\n    currencyCodeChanged: EventEmitter<string>;\r\n    timezoneChanged: EventEmitter<string>;\r\n\r\n    loadTranslation: Subject<any>;\r\n\r\n    getConfiguration(): LocaleConfig;\r\n\r\n    init(): Promise<void>;\r\n\r\n    getBrowserLanguage(): string | null;\r\n\r\n    getAvailableLanguages(): string[];\r\n\r\n    getLanguageDirection(languageCode?: string): string;\r\n\r\n    getCurrentLanguage(): string;\r\n\r\n    getCurrentCountry(): string;\r\n\r\n    getCurrentLocale(): string;\r\n\r\n    getCurrentScript(): string;\r\n\r\n    getCurrentNumberingSystem(): string;\r\n\r\n    getCurrentCalendar(): string;\r\n\r\n    getDefaultLocale(): string;\r\n\r\n    getCurrentCurrency(): string;\r\n\r\n    getCurrencySymbol(\r\n        currencyDisplay?: 'code' | 'symbol' | 'name',\r\n        defaultLocale?: string,\r\n        currency?: string\r\n    ): string;\r\n\r\n    getCurrentTimezone(): string;\r\n\r\n    setCurrentLanguage(languageCode: string): void;\r\n\r\n    setDefaultLocale(\r\n        languageCode: string,\r\n        countryCode?: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): void;\r\n\r\n    setCurrentCurrency(currencyCode: string): void;\r\n\r\n    setCurrentTimezone(zoneName: string): void;\r\n\r\n}\r\n\r\n/**\r\n * Manages language, default locale, currency & timezone.\r\n */\r\n@Injectable() export class LocaleService implements ILocaleService {\r\n\r\n    @Output() public languageCodeChanged: EventEmitter<string> = new EventEmitter<string>(true);\r\n    @Output() public defaultLocaleChanged: EventEmitter<string> = new EventEmitter<string>(true);\r\n    @Output() public currencyCodeChanged: EventEmitter<string> = new EventEmitter<string>(true);\r\n    @Output() public timezoneChanged: EventEmitter<string> = new EventEmitter<string>(true);\r\n\r\n    public loadTranslation: Subject<any> = new Subject();\r\n\r\n    private defaultLocale: DefaultLocale = new DefaultLocale();\r\n\r\n    private currencyCode: string;\r\n    private timezone: string;\r\n\r\n    constructor( @Inject(LOCALE_CONFIG) private configuration: LocaleConfig, private storage: LocaleStorage) { }\r\n\r\n    public getConfiguration(): LocaleConfig {\r\n        return this.configuration;\r\n    }\r\n\r\n    public async init(): Promise<void> {\r\n        await this.initStorage();\r\n\r\n        if (this.configuration.defaultLocale) {\r\n            this.initDefaultLocale();\r\n        } else if (this.configuration.language) {\r\n            this.initLanguage();\r\n        }\r\n\r\n        if (this.configuration.currency) {\r\n            this.initCurrency();\r\n        }\r\n\r\n        if (this.configuration.timezone) {\r\n            this.initTimezone();\r\n        }\r\n    }\r\n\r\n    public getBrowserLanguage(): string | null {\r\n        let browserLanguage: string | null = null;\r\n        if (typeof navigator !== \"undefined\" && navigator.language) {\r\n            browserLanguage = navigator.language;\r\n        }\r\n        if (browserLanguage != null) {\r\n            const index: number = browserLanguage.indexOf(\"-\");\r\n            if (index != -1) {\r\n                browserLanguage = browserLanguage.substring(0, index);\r\n            }\r\n        }\r\n        return browserLanguage;\r\n    }\r\n\r\n    public getAvailableLanguages(): string[] {\r\n        let languages: string[] = [];\r\n        if (this.configuration.languages) {\r\n            languages = this.configuration.languages.map((language: Language) => language.code);\r\n        }\r\n        return languages;\r\n    }\r\n\r\n    public getLanguageDirection(languageCode: string = this.defaultLocale.languageCode): string {\r\n        const matchedLanguages: Language[] = this.matchLanguage(languageCode);\r\n        return matchedLanguages[0].dir;\r\n    }\r\n\r\n    public getCurrentLanguage(): string {\r\n        return this.defaultLocale.languageCode;\r\n    }\r\n\r\n    public getCurrentCountry(): string {\r\n        if (!!this.defaultLocale.countryCode) {\r\n            return this.defaultLocale.countryCode;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public getCurrentScript(): string {\r\n        if (!!this.defaultLocale.scriptCode) {\r\n            return this.defaultLocale.scriptCode;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public getCurrentLocale(): string {\r\n        const locale: string = !!this.defaultLocale.countryCode\r\n            ? this.defaultLocale.languageCode + \"-\" + this.defaultLocale.countryCode\r\n            : this.defaultLocale.languageCode;\r\n        return locale;\r\n    }\r\n\r\n    public getCurrentNumberingSystem(): string {\r\n        if (!!this.defaultLocale.numberingSystem) {\r\n            return this.defaultLocale.numberingSystem;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public getCurrentCalendar(): string {\r\n        if (!!this.defaultLocale.calendar) {\r\n            return this.defaultLocale.calendar;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public getDefaultLocale(): string {\r\n        return this.defaultLocale.value;\r\n    }\r\n\r\n    public getCurrentCurrency(): string {\r\n        return this.currencyCode;\r\n    }\r\n\r\n    public getCurrencySymbol(\r\n        currencyDisplay: 'code' | 'symbol' | 'name' = 'symbol',\r\n        defaultLocale: string = this.defaultLocale.value,\r\n        currency: string = this.currencyCode\r\n    ): string {\r\n\r\n        let currencySymbol: string = this.currencyCode;\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const localeZero: string = new Intl.NumberFormat(defaultLocale).format(0);\r\n            const value: number = 0; // Reference value.\r\n            const localeValue: string = new Intl.NumberFormat(\r\n                defaultLocale,\r\n                {\r\n                    style: 'currency',\r\n                    currency: currency,\r\n                    currencyDisplay: currencyDisplay,\r\n                    minimumFractionDigits: 0,\r\n                    maximumFractionDigits: 0\r\n                }\r\n            ).format(value);\r\n            currencySymbol = localeValue.replace(localeZero, \"\");\r\n            currencySymbol = currencySymbol.trim();\r\n        }\r\n        return currencySymbol;\r\n    }\r\n\r\n    public getCurrentTimezone(): string {\r\n        return this.timezone;\r\n    }\r\n\r\n    public setCurrentLanguage(languageCode: string): void {\r\n        if (this.defaultLocale.languageCode != languageCode) {\r\n            this.defaultLocale.build(languageCode);\r\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\r\n            this.sendLanguageEvents();\r\n            this.sendTranslationEvents();\r\n        }\r\n    }\r\n\r\n    public setDefaultLocale(\r\n        languageCode: string,\r\n        countryCode?: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): void {\r\n        if (this.defaultLocale.languageCode != languageCode ||\r\n            this.defaultLocale.countryCode != countryCode ||\r\n            this.defaultLocale.scriptCode != scriptCode ||\r\n            this.defaultLocale.numberingSystem != numberingSystem ||\r\n            this.defaultLocale.calendar != calendar) {\r\n\r\n            this.defaultLocale.build(\r\n                languageCode,\r\n                countryCode,\r\n                scriptCode,\r\n                numberingSystem,\r\n                calendar\r\n            );\r\n\r\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\r\n            this.sendDefaultLocaleEvents();\r\n            this.sendTranslationEvents();\r\n        }\r\n    }\r\n\r\n    public setCurrentCurrency(currencyCode: string): void {\r\n        if (this.currencyCode != currencyCode) {\r\n            this.currencyCode = currencyCode;\r\n            this.storage.write(\"currency\", this.currencyCode);\r\n            this.sendCurrencyEvents();\r\n        }\r\n    }\r\n\r\n    public setCurrentTimezone(zoneName: string): void {\r\n        if (this.timezone != zoneName) {\r\n            this.timezone = zoneName;\r\n            this.storage.write(\"timezone\", this.timezone);\r\n            this.sendTimezoneEvents();\r\n        }\r\n    }\r\n\r\n    private async initStorage(): Promise<void> {\r\n        // Tries to retrieve default locale & currency from the browser storage.\r\n        if (!this.defaultLocale.value) {\r\n            const defaultLocale: string | null = await this.storage.read(\"defaultLocale\");\r\n            if (!!defaultLocale) {\r\n                this.defaultLocale.value = defaultLocale;\r\n            }\r\n        }\r\n        if (this.currencyCode == null) {\r\n            const currencyCode: string | null = await this.storage.read(\"currency\");\r\n            if (!!currencyCode) {\r\n                this.currencyCode = currencyCode;\r\n            }\r\n        }\r\n        if (this.timezone == null) {\r\n            const zoneName: string | null = await this.storage.read(\"timezone\");\r\n            if (!!zoneName) {\r\n                this.timezone = zoneName;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initLanguage(): void {\r\n        if (!this.defaultLocale.languageCode) {\r\n            const browserLanguage: string | null = this.getBrowserLanguage();\r\n            let matchedLanguages: Language[] = [];\r\n            if (!!browserLanguage) {\r\n                matchedLanguages = this.matchLanguage(browserLanguage);\r\n            }\r\n            if (!!browserLanguage && matchedLanguages.length > 0) {\r\n                this.defaultLocale.build(browserLanguage);\r\n            } else if (this.configuration.language) {\r\n                this.defaultLocale.build(this.configuration.language);\r\n            }\r\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\r\n        }\r\n        this.sendLanguageEvents();\r\n    }\r\n\r\n    private initDefaultLocale(): void {\r\n        if (!this.defaultLocale.value) {\r\n            if (this.configuration.defaultLocale) {\r\n                this.defaultLocale.build(\r\n                    this.configuration.defaultLocale.languageCode,\r\n                    this.configuration.defaultLocale.countryCode,\r\n                    this.configuration.defaultLocale.scriptCode,\r\n                    this.configuration.defaultLocale.numberingSystem,\r\n                    this.configuration.defaultLocale.calendar\r\n                );\r\n                this.storage.write(\"defaultLocale\", this.defaultLocale.value);\r\n            }\r\n        }\r\n        this.sendDefaultLocaleEvents();\r\n    }\r\n\r\n    private initCurrency(): void {\r\n        if (this.currencyCode == null) {\r\n            if (this.configuration.currency) {\r\n                this.currencyCode = this.configuration.currency;\r\n                this.storage.write(\"currency\", this.currencyCode);\r\n            }\r\n        }\r\n        this.sendCurrencyEvents();\r\n    }\r\n\r\n    private initTimezone(): void {\r\n        if (this.timezone == null) {\r\n            if (this.configuration.timezone) {\r\n                this.timezone = this.configuration.timezone;\r\n                this.storage.write(\"timezone\", this.timezone);\r\n            }\r\n        }\r\n        this.sendCurrencyEvents();\r\n    }\r\n\r\n    private matchLanguage(languageCode: string): Language[] {\r\n        let matchedLanguages: Language[] = [];\r\n        if (this.configuration.languages) {\r\n            matchedLanguages = this.configuration.languages.filter(\r\n                (language: Language) => {\r\n                    return language.code == languageCode;\r\n                });\r\n        }\r\n        return matchedLanguages;\r\n    }\r\n\r\n    private sendLanguageEvents(): void {\r\n        this.languageCodeChanged.emit(this.defaultLocale.languageCode);\r\n    }\r\n\r\n    private sendDefaultLocaleEvents(): void {\r\n        this.defaultLocaleChanged.emit(this.defaultLocale.value);\r\n    }\r\n\r\n    private sendCurrencyEvents(): void {\r\n        this.currencyCodeChanged.emit(this.currencyCode);\r\n    }\r\n\r\n    private sendTimezoneEvents(): void {\r\n        this.timezoneChanged.emit(this.timezone);\r\n    }\r\n\r\n    private sendTranslationEvents(): void {\r\n        // This event is subscribed by TranslationService to load the translation data.\r\n        this.loadTranslation.next();\r\n    }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\n\r\nimport { TRANSLATION_CONFIG, TranslationConfig } from '../models/l10n-config';\r\nimport { ProviderType } from '../models/types';\r\n\r\n/**\r\n * Implement this class-interface to create a custom provider for translation data.\r\n */\r\n@Injectable() export abstract class TranslationProvider {\r\n\r\n    /**\r\n     * This method must contain the logic of data access.\r\n     * @param language The current language\r\n     * @param args The object set during the configuration of 'providers'\r\n     * @return An observable of an object of translation data: {key: value}\r\n     */\r\n    public abstract getTranslation(language: string, args: any): Observable<any>;\r\n\r\n}\r\n\r\n@Injectable() export class HttpTranslationProvider implements TranslationProvider {\r\n\r\n    private cache: { [key: string]: Observable<any> } = {};\r\n\r\n    constructor( @Inject(TRANSLATION_CONFIG) private configuration: TranslationConfig, private http: HttpClient) { }\r\n\r\n    public getTranslation(language: string, args: any): Observable<any> {\r\n        let url: string = \"\";\r\n\r\n        switch (args.type) {\r\n            case ProviderType.WebAPI:\r\n                url += args.path + language;\r\n                break;\r\n            default:\r\n                url += args.prefix + language + \".json\";\r\n        }\r\n\r\n        if (this.configuration.caching) {\r\n            return this.caching(url, this.http.get(url));\r\n        }\r\n        return this.http.get(url);\r\n    }\r\n\r\n    private caching(key: string, request: Observable<any>): Observable<any> {\r\n        if (this.cache[key]) {\r\n            return this.cache[key];\r\n        }\r\n\r\n        const buffer: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n        request.subscribe(\r\n            (value: any) => buffer.next(value),\r\n            (error: any) => buffer.error(error),\r\n            () => buffer.complete()\r\n        );\r\n\r\n        const response: Observable<any> = buffer.asObservable();\r\n        this.cache[key] = response;\r\n        return response;\r\n    }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { TRANSLATION_CONFIG, TranslationConfig } from '../models/l10n-config';\r\n\r\n/**\r\n * Implement this class-interface to create a custom handler for translated values.\r\n */\r\n@Injectable() export abstract class TranslationHandler {\r\n\r\n    /**\r\n     * This method must contain the logic to parse the translated value.\r\n     * @param path The path of the key\r\n     * @param key The key that has been requested\r\n     * @param value The translated value\r\n     * @param args The parameters passed along with the key\r\n     * @param lang The current language\r\n     * @return The parsed value\r\n     */\r\n    public abstract parseValue(path: string, key: string, value: string | null, args: any, lang: string): string | any;\r\n\r\n}\r\n\r\n@Injectable() export class DefaultTranslationHandler implements TranslationHandler {\r\n\r\n    constructor( @Inject(TRANSLATION_CONFIG) private configuration: TranslationConfig) { }\r\n\r\n    public parseValue(path: string, key: string, value: string | null, args: any, lang: string): string | any {\r\n        if (value == null) {\r\n            return this.handleMissingValue(path);\r\n        } else if (args) {\r\n            return this.handleArgs(value, args);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private handleMissingValue(path: string): string {\r\n        if (this.configuration.missingValue) {\r\n            return typeof this.configuration.missingValue === \"function\"\r\n                ? this.configuration.missingValue(path)\r\n                : this.configuration.missingValue;\r\n        }\r\n        // The same path is returned.\r\n        return path;\r\n    }\r\n\r\n    private handleArgs(value: string, args: any): string {\r\n        const TEMPLATE_REGEXP: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\r\n        return value.replace(TEMPLATE_REGEXP, (substring: string, parsedKey: string) => {\r\n            const replacer: string = args[parsedKey] as string;\r\n            return typeof replacer !== \"undefined\" ? replacer : substring;\r\n        });\r\n    }\r\n\r\n}\r\n","function isObject(item: any): boolean {\r\n    return (typeof item === \"object\" && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target: any, source: any): any {\r\n    const output: any = Object.assign({}, target);\r\n    if (isObject(target) && isObject(source)) {\r\n        Object.keys(source).forEach((key: any) => {\r\n            if (isObject(source[key])) {\r\n                if (!(key in target)) {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                } else {\r\n                    output[key] = mergeDeep(target[key], source[key]);\r\n                }\r\n            } else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        });\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { merge } from 'rxjs/observable/merge';\r\nimport { concat } from 'rxjs/observable/concat';\r\n\r\nimport { TRANSLATION_CONFIG, TranslationConfig } from '../models/l10n-config';\r\nimport { LocaleService } from './locale.service';\r\nimport { TranslationProvider } from './translation-provider';\r\nimport { TranslationHandler } from './translation-handler';\r\nimport { IntlAPI } from './intl-api';\r\nimport { LoadingMode, ServiceState, ProviderType, ISOCode } from '../models/types';\r\nimport { mergeDeep } from \"../models/merge-deep\";\r\n\r\n/**\r\n * Manages the translation data.\r\n */\r\nexport interface ITranslationService {\r\n\r\n    translationError: Subject<any>;\r\n\r\n    getConfiguration(): TranslationConfig;\r\n\r\n    init(): Promise<void>;\r\n\r\n    /**\r\n     * Fired when the translation data has been loaded. Returns the translation language.\r\n     */\r\n    translationChanged(): Observable<string>;\r\n\r\n    /**\r\n     * Translates a key or an array of keys.\r\n     * @param keys The key or an array of keys to be translated\r\n     * @param args Optional parameters contained in the key\r\n     * @param lang The current language of the service is used by default\r\n     * @return The translated value or an object: {key: value}\r\n     */\r\n    translate(keys: string | string[], args?: any, lang?: string): string | any;\r\n\r\n    translateAsync(keys: string | string[], args?: any, lang?: string): Observable<string | any>;\r\n\r\n}\r\n\r\n/**\r\n * Manages the translation data.\r\n */\r\n@Injectable() export class TranslationService implements ITranslationService {\r\n\r\n    public translationError: Subject<any> = new Subject();\r\n\r\n    private serviceState: ServiceState;\r\n\r\n    private loadingMode: LoadingMode;\r\n\r\n    private translation: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n    /**\r\n     * The translation data: {language: {key: value}}.\r\n     */\r\n    private translationData: any = {};\r\n\r\n    constructor(\r\n        @Inject(TRANSLATION_CONFIG) private configuration: TranslationConfig,\r\n        private locale: LocaleService,\r\n        private translationProvider: TranslationProvider,\r\n        private translationHandler: TranslationHandler\r\n    ) {\r\n        this.serviceState = ServiceState.isWaiting;\r\n    }\r\n\r\n    public getConfiguration(): TranslationConfig {\r\n        return this.configuration;\r\n    }\r\n\r\n    public async init(): Promise<void> {\r\n        if (this.configuration.providers) {\r\n            this.loadingMode = LoadingMode.Async;\r\n        } else {\r\n            this.loadingMode = LoadingMode.Direct;\r\n            if (this.configuration.translationData) {\r\n                const translations: any[] = this.configuration.translationData;\r\n                for (const translation of translations) {\r\n                    this.addData(translation.data, translation.languageCode);\r\n                }\r\n            }\r\n        }\r\n\r\n        // When the language changes, loads translation data.\r\n        this.locale.loadTranslation.subscribe(\r\n            () => { this.loadTranslation(); }\r\n        );\r\n\r\n        await this.loadTranslation();\r\n    }\r\n\r\n    /**\r\n     * Fired when the translation data has been loaded. Returns the translation language.\r\n     */\r\n    public translationChanged(): Observable<string> {\r\n        return this.translation.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Translates a key or an array of keys.\r\n     * @param keys The key or an array of keys to be translated\r\n     * @param args Optional parameters contained in the key\r\n     * @param lang The current language of the service is used by default\r\n     * @return The translated value or an object: {key: value}\r\n     */\r\n    public translate(\r\n        keys: string | string[],\r\n        args: any = null,\r\n        lang: string = this.translation.getValue()\r\n    ): string | any {\r\n        // If the service is not ready, returns the keys.\r\n        if (this.serviceState != ServiceState.isReady) return keys;\r\n\r\n        if (Array.isArray(keys)) {\r\n            const data: any = {};\r\n            for (const key of keys) {\r\n                data[key] = this.translateKey(key, args, lang);\r\n            }\r\n            return data;\r\n        }\r\n\r\n        return this.translateKey(keys, args, lang);\r\n    }\r\n\r\n    public translateAsync(\r\n        keys: string | string[],\r\n        args?: any,\r\n        lang: string = this.translation.getValue()\r\n    ): Observable<string | any> {\r\n        return Observable.create((observer: Observer<string | any>) => {\r\n            const values: string | any = this.translate(keys, args, lang);\r\n            observer.next(values);\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    private translateKey(key: string, args: any, lang: string): string | any {\r\n        if (key == null || key == \"\") return null;\r\n        // I18n plural.\r\n        if (this.configuration.i18nPlural && /^\\d+\\b/.exec(key)) {\r\n            return this.translateI18nPlural(key, args, lang);\r\n        }\r\n        return this.getValue(key, args, lang);\r\n    }\r\n\r\n    private getValue(key: string, args: any, lang: string): string | any {\r\n        const path: string = key;\r\n        let value: string | null = null;\r\n\r\n        let translation: any = this.translationData[lang];\r\n\r\n        if (translation) {\r\n            // Composed key.\r\n            if (this.configuration.composedKeySeparator) {\r\n                const sequences: string[] = key.split(this.configuration.composedKeySeparator);\r\n\r\n                key = sequences.shift()!;\r\n                while (sequences.length > 0 && translation[key]) {\r\n                    translation = translation[key];\r\n                    key = sequences.shift()!;\r\n                }\r\n            }\r\n\r\n            value = translation[key] || translation[this.configuration.missingKey || \"\"];\r\n        }\r\n        return this.translationHandler.parseValue(path, key, value, args, lang);\r\n    }\r\n\r\n    private translateI18nPlural(key: string, args: any, lang: string): string {\r\n        let keyText: string = key.replace(/^\\d+\\b/, \"\");\r\n        keyText = keyText.trim();\r\n\r\n        const keyNumber: number = parseFloat(key);\r\n        key = key.replace(/^\\d+/, this.translateNumber(keyNumber));\r\n\r\n        return key.replace(keyText, this.getValue(keyText, args, lang));\r\n    }\r\n\r\n    private translateNumber(keyNumber: number): string {\r\n        if (!isNaN(keyNumber) && IntlAPI.hasNumberFormat()) {\r\n            const localeNumber: string = new Intl.NumberFormat(this.translation.getValue()).format(keyNumber);\r\n            return localeNumber;\r\n        }\r\n        return keyNumber.toString();\r\n    }\r\n\r\n    private async loadTranslation(): Promise<void> {\r\n        let language: string;\r\n        if (this.configuration.composedLanguage) {\r\n            language = this.composeLanguage(this.configuration.composedLanguage);\r\n        } else {\r\n            language = this.locale.getCurrentLanguage();\r\n        }\r\n\r\n        if (language != null) {\r\n            if (this.loadingMode == LoadingMode.Async) {\r\n                await this.getTranslation(language).toPromise();\r\n            } else {\r\n                this.releaseTranslation(language);\r\n            }\r\n        }\r\n    }\r\n\r\n    private composeLanguage(composedLanguage: ISOCode[]): string {\r\n        let language: string = \"\";\r\n        if (composedLanguage.length > 0) {\r\n            for (let i: number = 0; i <= composedLanguage.length - 1; i++) {\r\n                switch (composedLanguage[i]) {\r\n                    case ISOCode.Script:\r\n                        language += this.locale.getCurrentScript();\r\n                        break;\r\n                    case ISOCode.Country:\r\n                        language += this.locale.getCurrentCountry();\r\n                        break;\r\n                    default:\r\n                        language += this.locale.getCurrentLanguage();\r\n                }\r\n                if (i < composedLanguage.length - 1) {\r\n                    language += \"-\";\r\n                }\r\n            }\r\n        }\r\n        return language;\r\n    }\r\n\r\n    private getTranslation(language: string): Observable<any> {\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.translationData = {};\r\n            this.serviceState = ServiceState.isLoading;\r\n\r\n            const sequencesOfOrderedTranslationData: Array<Observable<any>> = [];\r\n            const sequencesOfTranslationData: Array<Observable<any>> = [];\r\n\r\n            for (const provider of this.configuration.providers!) {\r\n                if (typeof provider.type !== \"undefined\" && provider.type == ProviderType.Fallback) {\r\n                    let fallbackLanguage: string = language;\r\n                    if (provider.fallbackLanguage) {\r\n                        fallbackLanguage = this.composeLanguage(provider.fallbackLanguage);\r\n                    }\r\n                    sequencesOfOrderedTranslationData.push(\r\n                        this.translationProvider.getTranslation(fallbackLanguage, provider)\r\n                    );\r\n                } else {\r\n                    sequencesOfTranslationData.push(\r\n                        this.translationProvider.getTranslation(language, provider)\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Merges all the sequences into a single observable sequence.\r\n            const mergedSequencesOfTranslationData: Observable<any> = merge(...sequencesOfTranslationData);\r\n\r\n            sequencesOfOrderedTranslationData.push(mergedSequencesOfTranslationData);\r\n\r\n            concat(...sequencesOfOrderedTranslationData).subscribe(\r\n                (data: any) => {\r\n                    this.addData(data, language);\r\n                },\r\n                (error: any) => {\r\n                    // Sends an event for custom actions.\r\n                    this.translationError.next(error);\r\n                    this.releaseTranslation(language);\r\n                    observer.next(null);\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    this.releaseTranslation(language);\r\n                    observer.next(null);\r\n                    observer.complete();\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private addData(data: any, language: string): void {\r\n        this.translationData[language] = typeof this.translationData[language] !== \"undefined\"\r\n            ? mergeDeep(this.translationData[language], data)\r\n            : data;\r\n    }\r\n\r\n    private releaseTranslation(language: string): void {\r\n        this.serviceState = ServiceState.isReady;\r\n        this.sendEvents(language);\r\n    }\r\n\r\n    private sendEvents(language: string): void {\r\n        // Sends an event for the services.\r\n        this.translation.next(language);\r\n    }\r\n\r\n}\r\n","import { Injectable, Inject, InjectionToken } from '@angular/core';\r\n\r\nimport { LOCALE_CONFIG, TRANSLATION_CONFIG, LocaleConfig, TranslationConfig } from '../models/l10n-config';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { TranslationService } from '../services/translation.service';\r\n\r\n/**\r\n * Initializes the services.\r\n */\r\n@Injectable() export class L10nLoader {\r\n\r\n    constructor(\r\n        @Inject(LOCALE_CONFIG) private localeConfig: LocaleConfig,\r\n        @Inject(TRANSLATION_CONFIG) private translationConfig: TranslationConfig,\r\n        private locale: LocaleService,\r\n        private translation: TranslationService\r\n    ) { }\r\n\r\n    /**\r\n     * Loads l10n services.\r\n     */\r\n    public async load(): Promise<void> {\r\n        // LocaleService initialization.\r\n        if (Object.keys(this.localeConfig).length > 0) {\r\n            await this.locale.init();\r\n        }\r\n        // TranslationService initialization.\r\n        if (Object.keys(this.translationConfig).length > 0) {\r\n            await this.translation.init();\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable, ChangeDetectorRef } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { TranslationService } from './translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\n\r\n/**\r\n * Provides 'lang' to the translate pipe.\r\n */\r\n@Injectable() export class Translation {\r\n\r\n    public lang: string;\r\n\r\n    protected translation: TranslationService;\r\n\r\n    protected paramSubscriptions: ISubscription[] = [];\r\n\r\n    constructor(\r\n        protected changeDetectorRef?: ChangeDetectorRef\r\n    ) {\r\n        this.translation = InjectorRef.get(TranslationService);\r\n        // When the language changes, subscribes to the event & updates lang property.\r\n        this.paramSubscriptions.push(this.translation.translationChanged().subscribe(\r\n            (language: string) => {\r\n                this.lang = language;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n    }\r\n\r\n    protected cancelParamSubscriptions(): void {\r\n        this.paramSubscriptions.forEach((subscription: ISubscription) => {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","import { Injectable, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Translation } from './translation';\r\nimport { LocaleService } from './locale.service';\r\nimport { TranslationService } from './translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\n\r\n/**\r\n * Provides 'lang' to the translate pipe,\r\n * 'defaultLocale', 'currency', 'timezone' to l10nDate, l10nDecimal, l10nPercent & l10nCurrency pipes.\r\n */\r\n@Injectable() export class Localization extends Translation {\r\n\r\n    public defaultLocale: string;\r\n    public currency: string;\r\n    public timezone: string;\r\n\r\n    protected locale: LocaleService;\r\n\r\n    constructor(\r\n        protected changeDetectorRef?: ChangeDetectorRef\r\n    ) {\r\n        super();\r\n\r\n        this.locale = InjectorRef.get(LocaleService);\r\n        this.defaultLocale = this.locale.getDefaultLocale();\r\n        // When the default locale changes, subscribes to the event & updates defaultLocale property.\r\n        this.paramSubscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            (defaultLocale: string) => {\r\n                this.defaultLocale = defaultLocale;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n\r\n        this.currency = this.locale.getCurrentCurrency();\r\n        // When the currency changes, subscribes to the event & updates currency property.\r\n        this.paramSubscriptions.push(this.locale.currencyCodeChanged.subscribe(\r\n            (currency: string) => {\r\n                this.currency = currency;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n\r\n        this.timezone = this.locale.getCurrentTimezone();\r\n        // When the timezone changes, subscribes to the event & updates timezone property.\r\n        this.paramSubscriptions.push(this.locale.timezoneChanged.subscribe(\r\n            (zoneName: string) => {\r\n                this.timezone = zoneName;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleService } from './locale.service';\r\nimport { IntlAPI } from './intl-api';\r\nimport { Decimal } from \"../models/types\";\r\n\r\n/**\r\n * Provides the methods for locale validation.\r\n */\r\nexport interface ILocaleValidation {\r\n\r\n    /**\r\n     * Converts a string to a number according to default locale.\r\n     * If the string cannot be converted to a number, returns NaN.\r\n     */\r\n    parseNumber(s: string, defaultLocale?: string): number | null;\r\n\r\n    getRegExp(digits: string, defaultLocale?: string): RegExp;\r\n\r\n}\r\n\r\n/**\r\n * Provides the methods for locale validation.\r\n */\r\n@Injectable() export class LocaleValidation implements ILocaleValidation {\r\n\r\n    constructor(private locale: LocaleService) { }\r\n\r\n    /**\r\n     * Converts a string to a number according to default locale.\r\n     * If the string cannot be converted to a number, returns NaN.\r\n     */\r\n    public parseNumber(s: string, defaultLocale: string = this.locale.getDefaultLocale()): number | null {\r\n        if (s == \"\" || s == null) {\r\n            return null;\r\n        }\r\n        let value: string = \"\";\r\n\r\n        const decimalCode: Decimal = this.getDecimalCode(defaultLocale);\r\n        const numberCodes: string[] = this.getNumberCodes(defaultLocale);\r\n\r\n        const characters: string[] = s.split(\"\");\r\n        for (const char of characters) {\r\n            const charCode: string = this.toUnicode(char);\r\n            const index: number = numberCodes.indexOf(charCode);\r\n            if (index != -1) {\r\n                value += index;\r\n            } else if (charCode == decimalCode.minusSign) {\r\n                value += \"-\";\r\n            } else if (charCode == decimalCode.decimalSeparator) {\r\n                value += \".\";\r\n            } else if (charCode == decimalCode.thousandSeparator) {\r\n                continue;\r\n            } else { return NaN; }\r\n        }\r\n        return parseFloat(value);\r\n    }\r\n\r\n    public getRegExp(digits: string, defaultLocale: string = this.locale.getDefaultLocale()): RegExp {\r\n        let minInt: number = 1;\r\n        let minFraction: number = 0;\r\n        let maxFraction: number = 3;\r\n\r\n        if (!!digits) {\r\n            const NUMBER_FORMAT_REGEXP: RegExp = /^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$/;\r\n            const parts: RegExpMatchArray | null = digits.match(NUMBER_FORMAT_REGEXP);\r\n            if (parts != null) {\r\n                if (parts[1] != null) {  // Min integer digits.\r\n                    minInt = parseInt(parts[1]);\r\n                }\r\n                if (parts[3] != null) {  // Min fraction digits.\r\n                    minFraction = parseInt(parts[3]);\r\n                }\r\n                if (parts[5] != null) {  // Max fraction digits.\r\n                    maxFraction = parseInt(parts[5]);\r\n                }\r\n            }\r\n        }\r\n\r\n        const decimalCode: Decimal = this.getDecimalCode(defaultLocale);\r\n        const numberCodes: string[] = this.getNumberCodes(defaultLocale);\r\n\r\n        const minusSign: string = decimalCode.minusSign;\r\n        const zero: string = numberCodes[0];\r\n        const decimalSeparator: string = decimalCode.decimalSeparator;\r\n        const thousandSeparator: string = decimalCode.thousandSeparator;\r\n        const nine: string = numberCodes[9];\r\n\r\n        // Pattern for 1.0-2 digits: /^-?[0-9]{1,}(\\.[0-9]{0,2})?$/\r\n        // Unicode pattern = \"^\\u002d?[\\u0030-\\u0039]{1,}(\\\\u002e[\\u0030-\\u0039]{0,2})?$\"\r\n        // Complete Pattern with thousand separator:\r\n        // /^-?([0-9]{1,}|(?=(?:\\,*[0-9]){1,}(\\.|$))(?!0(?!\\.|[0-9]))[0-9]{1,3}(\\,[0-9]{3})*)(\\.[0-9]{0,2})?$/\r\n        // where:\r\n        // (?=(?:\\,*[0-9]){1,}(\\.|$)) => Positive Lookahead to count the integer digits\r\n        // (?!0(?!\\.|[0-9])) => Negative Lookahead to avoid 0,1111.00\r\n        // [0-9]{1,3}(\\,[0-9]{3})* => Allows thousand separator\r\n        const d: string = `[${zero}-${nine}]`;\r\n        const n: string = `{${minInt},}`;\r\n        const nm: string = `{${minFraction},${maxFraction}}`;\r\n        const plainPattern: string = `${d}${n}`;\r\n        // tslint:disable-next-line\r\n        const thousandPattern: string = `(?=(?:\\\\${thousandSeparator}*${d})${n}(\\\\${decimalSeparator}|$))(?!${zero}(?!\\\\${decimalSeparator}|${d}))${d}{1,3}(\\\\${thousandSeparator}${d}{3})*`;\r\n\r\n        let pattern: string = `^${minusSign}?(${plainPattern}|${thousandPattern})`;\r\n\r\n        if (minFraction > 0 && maxFraction > 0) {\r\n            // Decimal separator is mandatory.\r\n            pattern += `\\\\${decimalSeparator}${d}${nm}$`;\r\n        } else if (minFraction == 0 && maxFraction > 0) {\r\n            // Decimal separator is optional.\r\n            pattern += `(\\\\${decimalSeparator}${d}${nm})?$`;\r\n        } else {\r\n            // Integer number.\r\n            pattern += `$`;\r\n        }\r\n\r\n        pattern = this.toChar(pattern);\r\n        const regExp: RegExp = new RegExp(pattern);\r\n        return regExp;\r\n    }\r\n\r\n    private getDecimalCode(defaultLocale: string): Decimal {\r\n        let decimalCode: Decimal = {\r\n            minusSign: this.toUnicode(\"-\"),\r\n            decimalSeparator: this.toUnicode(\".\"),\r\n            thousandSeparator: this.toUnicode(\",\")\r\n        };\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const value: number = -1000.9; // Reference value.\r\n            const localeValue: string = new Intl.NumberFormat(defaultLocale).format(value);\r\n\r\n            const unicodeChars: string[] = [];\r\n            for (let i: number = 0; i <= 7; i++) {\r\n                unicodeChars.push(this.toUnicode(localeValue.charAt(i)));\r\n            }\r\n\r\n            // Right to left:\r\n            // checks Unicode characters 'RIGHT-TO-LEFT MARK' (U+200F) & 'Arabic Letter Mark' (U+061C),\r\n            // or the reverse order.\r\n            // Left to right:\r\n            // checks Unicode character 'LEFT-TO-RIGHT MARK' (U+200E).\r\n            if (unicodeChars[0] == \"\\\\u200F\" || unicodeChars[0] == \"\\\\u061C\") {\r\n                decimalCode = {\r\n                    minusSign: unicodeChars[1],\r\n                    decimalSeparator: unicodeChars[7],\r\n                    thousandSeparator: unicodeChars[3]\r\n                };\r\n            } else if (unicodeChars[0] == this.toUnicode(\r\n                new Intl.NumberFormat(defaultLocale).format(1))\r\n            ) {\r\n                decimalCode = {\r\n                    minusSign: unicodeChars[7],\r\n                    decimalSeparator: unicodeChars[5],\r\n                    thousandSeparator: unicodeChars[1]\r\n                };\r\n            } else if (unicodeChars[0] == \"\\\\u200E\") {\r\n                decimalCode = {\r\n                    minusSign: unicodeChars[1],\r\n                    decimalSeparator: unicodeChars[7],\r\n                    thousandSeparator: unicodeChars[3]\r\n                };\r\n            } else {\r\n                decimalCode = {\r\n                    minusSign: unicodeChars[0],\r\n                    decimalSeparator: unicodeChars[6],\r\n                    thousandSeparator: unicodeChars[2]\r\n                };\r\n            }\r\n        }\r\n        return decimalCode;\r\n    }\r\n\r\n    private getNumberCodes(defaultLocale: string): string[] {\r\n        const numberCodes: string[] = [];\r\n\r\n        for (let num: number = 0; num <= 9; num++) {\r\n            numberCodes.push(this.toUnicode(num.toString()));\r\n        }\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            for (let num: number = 0; num <= 9; num++) {\r\n                numberCodes[num] = this.toUnicode(\r\n                    new Intl.NumberFormat(defaultLocale).format(num)\r\n                );\r\n            }\r\n        }\r\n        return numberCodes;\r\n    }\r\n\r\n    private toChar(pattern: string): string {\r\n        return pattern.replace(/\\\\u[\\dA-F]{4}/gi, (match: string) => {\r\n            return String.fromCharCode(parseInt(match.replace(/\\\\u/g, \"\"), 16));\r\n        });\r\n    }\r\n\r\n    private toUnicode(c: string): string {\r\n        return \"\\\\u\" + this.toHex(c.charCodeAt(0));\r\n    }\r\n\r\n    private toHex(value: number): string {\r\n        let hex: string = value.toString(16).toUpperCase();\r\n        // With padding.\r\n        hex = \"0000\".substr(0, 4 - hex.length) + hex;\r\n        return hex;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LocaleService } from './locale.service';\r\nimport { TranslationService } from './translation.service';\r\nimport { IntlAPI } from './intl-api';\r\n\r\n/**\r\n * Intl.Collator APIs.\r\n */\r\nexport interface ICollator {\r\n\r\n    /**\r\n     * Compares two keys by the value of translation according to the current language.\r\n     * @param key1, key2 The keys of the values to compare\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return A negative value if the value of translation of key1 comes before the value of translation of key2;\r\n     *         a positive value if key1 comes after key2;\r\n     *         0 if they are considered equal or Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    compare(\r\n        key1: string,\r\n        key2: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): number;\r\n\r\n    /**\r\n     * Sorts an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return The same sorted list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    sort(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): any[];\r\n\r\n    /**\r\n     * Sorts asynchronously an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return An observable of the sorted list or of the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    sortAsync(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): Observable<any[]>;\r\n\r\n    /**\r\n     * Matches a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return A filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    search(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options?: any\r\n    ): any[];\r\n\r\n    /**\r\n     * Matches asynchronously a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return An observable of the filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    searchAsync(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options?: any\r\n    ): Observable<any[]>;\r\n\r\n}\r\n\r\n/**\r\n * Intl.Collator APIs.\r\n */\r\n@Injectable() export class Collator implements ICollator {\r\n\r\n    constructor(private locale: LocaleService, private translation: TranslationService) { }\r\n\r\n    /**\r\n     * Compares two keys by the value of translation according to the current language.\r\n     * @param key1, key2 The keys of the values to compare\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return A negative value if the value of translation of key1 comes before the value of translation of key2;\r\n     *         a positive value if key1 comes after key2;\r\n     *         0 if they are considered equal or Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    public compare(\r\n        key1: string,\r\n        key2: string,\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): number {\r\n        if (!IntlAPI.hasCollator()) {\r\n            return 0;\r\n        }\r\n\r\n        const value1: string = this.translation.translate(key1);\r\n        const value2: string = this.translation.translate(key2);\r\n\r\n        const locale: string = this.addExtension(\r\n            this.locale.getCurrentLocale(),\r\n            extension\r\n        );\r\n        return new Intl.Collator(locale, options).compare(value1, value2);\r\n    }\r\n\r\n    /**\r\n     * Sorts an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return The same sorted list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    public sort(\r\n        list: any[],\r\n        keyName: any,\r\n        order: string = \"asc\",\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): any[] {\r\n        if (!list || !keyName || !IntlAPI.hasCollator()) {\r\n            return list;\r\n        }\r\n\r\n        list.sort((key1: any, key2: any) => {\r\n            return this.compare(key1[keyName], key2[keyName], extension, options);\r\n        });\r\n\r\n        if (order == \"desc\") {\r\n            list.reverse();\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Sorts asynchronously an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return An observable of the sorted list or of the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    public sortAsync(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): Observable<any[]> {\r\n        return Observable.create((observer: Observer<any[]>) => {\r\n            observer.next(this.sort(list, keyName, order, extension, options));\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Matches a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return A filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    public search(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options: any = { usage: 'search' }\r\n    ): any[] {\r\n        if (!list || !keyNames || s == \"\" || s == null || !IntlAPI.hasCollator()) {\r\n            return list;\r\n        }\r\n\r\n        const locale: string = this.locale.getCurrentLocale();\r\n        const collator: Intl.Collator = new Intl.Collator(locale, options);\r\n\r\n        const matches: any[] = list.filter((key: any) => {\r\n            let found: boolean = false;\r\n            for (let i: number = 0; i < keyNames.length; i++) {\r\n                if (this.match(key[keyNames[i]], s, collator)) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            return found;\r\n        });\r\n        return matches;\r\n    }\r\n\r\n    /**\r\n     * Matches asynchronously a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return An observable of the filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    public searchAsync(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options: any = { usage: 'search' }\r\n    ): Observable<any[]> {\r\n        return Observable.create((observer: Observer<any[]>) => {\r\n            observer.next(this.search(s, list, keyNames, options));\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    private addExtension(locale: string, extension?: string): string {\r\n        if (!!extension) {\r\n            locale = locale + \"-u-\" + extension;\r\n        }\r\n        return locale;\r\n    }\r\n\r\n    private match(key: string, s: string, collator: Intl.Collator): boolean {\r\n        const value: string = this.translation.translate(key);\r\n        const valueLength: number = value.length;\r\n        const sLength: number = s.length;\r\n\r\n        if (sLength > valueLength) {\r\n            return false;\r\n        }\r\n        if (sLength == valueLength) {\r\n            return collator.compare(value, s) == 0;\r\n        }\r\n\r\n        let found: boolean = false;\r\n        for (let i: number = 0; i < valueLength - (sLength - 1); i++) {\r\n            const str: string = value.substr(i, sLength);\r\n            if (collator.compare(str, s) == 0) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        return found;\r\n    }\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\r\n\r\n/**\r\n * Property decorator for components to provide the parameter to the translate pipe.\r\n */\r\nexport function Language(): PropertyDecorator {\r\n\r\n    function DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let subscription: ISubscription;\r\n\r\n        const targetNgOnInit: Function = target.ngOnInit;\r\n        function ngOnInit(this: any): void {\r\n            const translation: TranslationService = InjectorRef.get(TranslationService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                // When the language changes, subscribes to the event & updates language property.\r\n                subscription = translation.translationChanged().subscribe(\r\n                    (language: string) => {\r\n                        this[propertyKey] = language;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const targetNgOnDestroy: Function = target.ngOnDestroy;\r\n        function ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\r\n\r\n/**\r\n * Property decorator for components to provide the parameter\r\n * to l10nDate, l10nDecimal, l10nPercent & l10nCurrency pipes.\r\n */\r\nexport function DefaultLocale(): PropertyDecorator {\r\n\r\n    function DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let subscription: ISubscription;\r\n\r\n        const targetNgOnInit: Function = target.ngOnInit;\r\n        function ngOnInit(this: any): void {\r\n            const locale: LocaleService = InjectorRef.get(LocaleService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = locale.getDefaultLocale();\r\n                // When the default locale changes, subscribes to the event & updates defaultLocale property.\r\n                subscription = locale.defaultLocaleChanged.subscribe(\r\n                    (defaultLocale: string) => {\r\n                        this[propertyKey] = defaultLocale;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const targetNgOnDestroy: Function = target.ngOnDestroy;\r\n        function ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\r\n\r\n/**\r\n * Property decorator for components to provide the parameter to the l10nCurrency pipe.\r\n */\r\nexport function Currency(): PropertyDecorator {\r\n\r\n    function DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let subscription: ISubscription;\r\n\r\n        const targetNgOnInit: Function = target.ngOnInit;\r\n        function ngOnInit(this: any): void {\r\n            const locale: LocaleService = InjectorRef.get(LocaleService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = locale.getCurrentCurrency();\r\n                // When the currency changes, subscribes to the event & updates currency property.\r\n                subscription = locale.currencyCodeChanged.subscribe(\r\n                    (currency: string) => {\r\n                        this[propertyKey] = currency;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const targetNgOnDestroy: Function = target.ngOnDestroy;\r\n        function ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\r\n\r\n/**\r\n * Property decorator for components to provide the parameter to the l10nDate pipe.\r\n */\r\nexport function Timezone(): PropertyDecorator {\r\n\r\n    function DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let subscription: ISubscription;\r\n\r\n        const targetNgOnInit: Function = target.ngOnInit;\r\n        function ngOnInit(this: any): void {\r\n            const locale: LocaleService = InjectorRef.get(LocaleService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = locale.getCurrentTimezone();\r\n                // When the timezone changes, subscribes to the event & updates timezone property.\r\n                subscription = locale.timezoneChanged.subscribe(\r\n                    (zoneName: string) => {\r\n                        this[propertyKey] = zoneName;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const targetNgOnDestroy: Function = target.ngOnDestroy;\r\n        function ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { TranslationService } from '../services/translation.service';\r\n\r\n@Pipe({\r\n    name: 'translate',\r\n    pure: true\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n    constructor(protected translation: TranslationService) { }\r\n\r\n    public transform(key: string, lang: string, args?: any): string {\r\n        return this.translation.translate(key, args, lang);\r\n    }\r\n\r\n}\r\n","import { IntlAPI } from '../services/intl-api';\r\nimport { NumberFormatStyle, DateFormatterFn, DateTimeOptions } from './types';\r\n\r\nfunction intlDateTimeFormat(\r\n    date: Date,\r\n    defaultLocale: string,\r\n    options: Intl.DateTimeFormatOptions,\r\n    timezone?: string\r\n): string {\r\n    const marks: RegExp = /[\\u200e\\u200f]/g;\r\n    options.timeZone = IntlAPI.hasTimezone() ? timezone : 'UTC';\r\n    return new Intl.DateTimeFormat(defaultLocale, options).format(date).replace(marks, \"\");\r\n}\r\n\r\nfunction datePartFactory(options: Intl.DateTimeFormatOptions): DateFormatterFn {\r\n    const dateFactory: (date: Date, defaultLocale: string, timezone?: string) => string =\r\n        (date: Date, defaultLocale: string, timezone?: string): string =>\r\n            intlDateTimeFormat(date, defaultLocale, options, timezone);\r\n    return dateFactory;\r\n}\r\n\r\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\r\n    const reducedOptions: Intl.DateTimeFormatOptions = options.reduce(\r\n        (merged: Intl.DateTimeFormatOptions, opt: Intl.DateTimeFormatOptions) => ({ ...merged, ...opt }), {}\r\n    );\r\n    return reducedOptions;\r\n}\r\n\r\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\r\n    const result: { [k: string]: string } = {};\r\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\r\n    return result;\r\n}\r\n\r\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\r\n    const result: { [k: string]: string } = {};\r\n    if (len < 4) {\r\n        result[prop] = len > 1 ? 'short' : 'narrow';\r\n    } else {\r\n        result[prop] = 'long';\r\n    }\r\n    return result;\r\n}\r\n\r\nconst FORMAT_ALIASES: { [format: string]: DateFormatterFn } = {\r\n    'short': datePartFactory(\r\n        combine([\r\n            digitCondition('year', 1),\r\n            digitCondition('month', 1),\r\n            digitCondition('day', 1),\r\n            digitCondition('hour', 1),\r\n            digitCondition('minute', 1)\r\n        ])),\r\n    'medium': datePartFactory(\r\n        combine([\r\n            digitCondition('year', 1),\r\n            nameCondition('month', 3),\r\n            digitCondition('day', 1),\r\n            digitCondition('hour', 1),\r\n            digitCondition('minute', 1),\r\n            digitCondition('second', 1),\r\n        ])),\r\n    'shortDate': datePartFactory(\r\n        combine([\r\n            digitCondition('year', 1),\r\n            digitCondition('month', 1),\r\n            digitCondition('day', 1)\r\n        ])),\r\n    'mediumDate': datePartFactory(\r\n        combine([\r\n            digitCondition('year', 1),\r\n            nameCondition('month', 3),\r\n            digitCondition('day', 1)\r\n        ])),\r\n    'longDate': datePartFactory(\r\n        combine([\r\n            digitCondition('year', 1),\r\n            nameCondition('month', 4),\r\n            digitCondition('day', 1)\r\n        ])),\r\n    'fullDate': datePartFactory(\r\n        combine([\r\n            digitCondition('year', 1),\r\n            nameCondition('month', 4),\r\n            nameCondition('weekday', 4),\r\n            digitCondition('day', 1)\r\n        ])),\r\n    'shortTime': datePartFactory(\r\n        combine([\r\n            digitCondition('hour', 1),\r\n            digitCondition('minute', 1)\r\n        ])),\r\n    'mediumTime': datePartFactory(\r\n        combine([\r\n            digitCondition('hour', 1),\r\n            digitCondition('second', 1),\r\n            digitCondition('minute', 1)\r\n        ])),\r\n};\r\n\r\nexport class IntlFormatter {\r\n\r\n    public static formatNumber(\r\n        num: number,\r\n        defaultLocale: string,\r\n        style: NumberFormatStyle,\r\n        digits?: string,\r\n        currency?: string,\r\n        currencyDisplay?: string): string | null {\r\n\r\n        let minInt: number | undefined;\r\n        let minFraction: number | undefined;\r\n        let maxFraction: number | undefined;\r\n        if (style !== NumberFormatStyle.Currency) {\r\n            minInt = 1;\r\n            minFraction = 0;\r\n            maxFraction = 3;\r\n        }\r\n\r\n        if (!!digits) {\r\n            const NUMBER_FORMAT_REGEXP: RegExp = /^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$/;\r\n            const parts: RegExpMatchArray | null = digits.match(NUMBER_FORMAT_REGEXP);\r\n            if (parts != null) {\r\n                if (parts[1] != null) {  // Min integer digits.\r\n                    minInt = parseInt(parts[1]);\r\n                }\r\n                if (parts[3] != null) {  // Min fraction digits.\r\n                    minFraction = parseInt(parts[3]);\r\n                }\r\n                if (parts[5] != null) {  // Max fraction digits.\r\n                    maxFraction = parseInt(parts[5]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return IntlFormatter.numberFormatter(num, defaultLocale, style, {\r\n            minimumIntegerDigits: minInt,\r\n            minimumFractionDigits: minFraction,\r\n            maximumFractionDigits: maxFraction,\r\n            currency: currency,\r\n            currencyDisplay: currencyDisplay\r\n        });\r\n    }\r\n\r\n    public static formatDate(\r\n        date: Date,\r\n        defaultLocale: string,\r\n        format: string | DateTimeOptions,\r\n        timezone?: string): string {\r\n\r\n        return IntlFormatter.dateTimeFormatter(date, defaultLocale, format, timezone);\r\n    }\r\n\r\n    private static numberFormatter(num: number, defaultLocale: string, style: NumberFormatStyle, opts: {\r\n        minimumIntegerDigits?: number,\r\n        minimumFractionDigits?: number,\r\n        maximumFractionDigits?: number,\r\n        currency?: string,\r\n        currencyDisplay?: string\r\n    } = {}): string {\r\n\r\n        const { minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency, currencyDisplay } = opts;\r\n        const options: Intl.NumberFormatOptions = {\r\n            minimumIntegerDigits,\r\n            minimumFractionDigits,\r\n            maximumFractionDigits,\r\n            style: NumberFormatStyle[style].toLowerCase()\r\n        };\r\n\r\n        if (style == NumberFormatStyle.Currency) {\r\n            options.currency = currency;\r\n            options.currencyDisplay = currencyDisplay;\r\n        }\r\n        return new Intl.NumberFormat(defaultLocale, options).format(num);\r\n    }\r\n\r\n    private static dateTimeFormatter(\r\n        date: Date, defaultLocale: string,\r\n        format: string | DateTimeOptions,\r\n        timezone?: string): string {\r\n\r\n        let options: Intl.DateTimeFormatOptions = {};\r\n        if (typeof format === \"string\") {\r\n            const fnFormatAliases: DateFormatterFn = FORMAT_ALIASES[format];\r\n            if (fnFormatAliases) return fnFormatAliases(date, defaultLocale, timezone);\r\n        } else {\r\n            options = format;\r\n        }\r\n        // If the format is wrong, returns the default Intl format.\r\n        return intlDateTimeFormat(date, defaultLocale, options, timezone);\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { IntlAPI } from '../services/intl-api';\r\nimport { IntlFormatter } from '../models/intl-formatter';\r\nimport { DateTimeOptions } from '../models/types';\r\n\r\n@Pipe({\r\n    name: 'l10nDate',\r\n    pure: true\r\n})\r\nexport class L10nDatePipe implements PipeTransform {\r\n\r\n    private readonly ISO8601_DATE_REGEX: RegExp =\r\n    /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\r\n\r\n    public transform(\r\n        value: any,\r\n        defaultLocale: string,\r\n        format: string | DateTimeOptions = 'mediumDate',\r\n        timezone?: string): string | null {\r\n\r\n        if (value == null || value === \"\" || value !== value) return null;\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasDateTimeFormat()) {\r\n            let date: Date;\r\n\r\n            if (typeof value === \"string\") {\r\n                value = value.trim();\r\n            }\r\n\r\n            if (this.isDate(value)) {\r\n                date = value;\r\n            } else if (!isNaN(value - parseFloat(value))) {\r\n                date = new Date(parseFloat(value));\r\n            } else if (typeof value === \"string\" && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\r\n                const [y, m, d] = value.split('-').map((val: string) => parseInt(val, 10));\r\n                date = new Date(y, m - 1, d);\r\n            } else {\r\n                date = new Date(value);\r\n            }\r\n\r\n            if (!this.isDate(date)) {\r\n                let match: RegExpMatchArray | null;\r\n                if ((typeof value === \"string\") && (match = value.match(this.ISO8601_DATE_REGEX))) {\r\n                    date = this.isoStringToDate(match);\r\n                }\r\n            }\r\n\r\n            return IntlFormatter.formatDate(date, defaultLocale, format, timezone);\r\n        }\r\n        // Returns the date without localization.\r\n        return value;\r\n    }\r\n\r\n    private isDate(value: any): value is Date {\r\n        return value instanceof Date && !isNaN(value.valueOf());\r\n    }\r\n\r\n    private isoStringToDate(match: RegExpMatchArray): Date {\r\n        const date: Date = new Date(0);\r\n        let tzHour: number = 0;\r\n        let tzMin: number = 0;\r\n        const dateSetter: Function = match[8] ? date.setUTCFullYear : date.setFullYear;\r\n        const timeSetter: Function = match[8] ? date.setUTCHours : date.setHours;\r\n\r\n        if (match[9]) {\r\n            tzHour = +(match[9] + match[10]);\r\n            tzMin = +(match[9] + match[11]);\r\n        }\r\n        dateSetter.call(date, +(match[1]), +(match[2]) - 1, +(match[3]));\r\n        const h: number = +(match[4] || '0') - tzHour;\r\n        const m: number = +(match[5] || '0') - tzMin;\r\n        const s: number = +(match[6] || '0');\r\n        const ms: number = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\r\n        timeSetter.call(date, h, m, s, ms);\r\n        return date;\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { IntlAPI } from '../services/intl-api';\r\nimport { IntlFormatter } from '../models/intl-formatter';\r\nimport { NumberFormatStyle } from '../models/types';\r\n\r\n@Pipe({\r\n    name: 'l10nDecimal',\r\n    pure: true\r\n})\r\nexport class L10nDecimalPipe implements PipeTransform {\r\n\r\n    public transform(value: any, defaultLocale: string, digits?: string): string | null {\r\n        if (value == null) return null;\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            value = typeof value === \"string\" && !isNaN(+value - parseFloat(value)) ? +value : value;\r\n\r\n            return IntlFormatter.formatNumber(value, defaultLocale, NumberFormatStyle.Decimal, digits);\r\n        }\r\n        // Returns the number without localization.\r\n        return value;\r\n    }\r\n\r\n}\r\n\r\n@Pipe({\r\n    name: 'l10nPercent',\r\n    pure: true\r\n})\r\nexport class L10nPercentPipe implements PipeTransform {\r\n\r\n    public transform(value: any, defaultLocale: string, digits?: string): string | null {\r\n        if (value == null) return null;\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            value = typeof value === \"string\" && !isNaN(+value - parseFloat(value)) ? +value : value;\r\n\r\n            return IntlFormatter.formatNumber(value, defaultLocale, NumberFormatStyle.Percent, digits);\r\n        }\r\n        // Returns the number without localization.\r\n        return value;\r\n    }\r\n\r\n}\r\n\r\n@Pipe({\r\n    name: 'l10nCurrency',\r\n    pure: true\r\n})\r\nexport class L10nCurrencyPipe implements PipeTransform {\r\n\r\n    public transform(\r\n        value: any,\r\n        defaultLocale: string,\r\n        currency: string,\r\n        currencyDisplay: 'code' | 'symbol' | 'name' = 'symbol',\r\n        digits?: string\r\n    ): string | null {\r\n\r\n        if (value == null) return null;\r\n        if (typeof defaultLocale === \"undefined\" || typeof currency === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            value = typeof value === \"string\" && !isNaN(+value - parseFloat(value)) ? +value : value;\r\n\r\n            return IntlFormatter.formatNumber(\r\n                value,\r\n                defaultLocale,\r\n                NumberFormatStyle.Currency,\r\n                digits,\r\n                currency,\r\n                currencyDisplay\r\n            );\r\n        }\r\n        // Returns the number & currency without localization.\r\n        return value + \" \" + currency;\r\n    }\r\n\r\n}\r\n","/**\r\n * Breadth First Search (BFS) algorithm for traversing & searching tree data structure of DOM\r\n * explores the neighbor nodes first, before moving to the next level neighbors.\r\n * Time complexity: between O(1) and O(|V|^2).\r\n */\r\nexport class BFS {\r\n\r\n    private static readonly SELECTOR: RegExp = new RegExp(\"^l10n|translate|locale\");\r\n\r\n    private static readonly MAX_DEPTH: number = 10;\r\n\r\n    /**\r\n     * Target node is a non empty text node.\r\n     */\r\n    public static getTargetNode(rootNode: any): any {\r\n        return BFS.walk(rootNode);\r\n    }\r\n\r\n    private static walk(rootNode: any): any {\r\n        const queue: any[] = [];\r\n\r\n        let iNode: any;\r\n        let depth: number = 0;\r\n        let nodeToDepthIncrease: number = 1;\r\n\r\n        queue.push(rootNode);\r\n        while (queue.length > 0 && depth <= this.MAX_DEPTH) {\r\n            iNode = queue.shift();\r\n            if (this.isTargetNode(iNode)) {\r\n                return iNode;\r\n            }\r\n            if (depth < this.MAX_DEPTH && iNode.childNodes != null) {\r\n                for (const child of iNode.childNodes) {\r\n                    if (this.isValidNode(child)) {\r\n                        queue.push(child);\r\n                    }\r\n                }\r\n            }\r\n            if (--nodeToDepthIncrease == 0) {\r\n                depth++;\r\n                nodeToDepthIncrease = queue.length;\r\n            }\r\n        }\r\n        return rootNode;\r\n    }\r\n\r\n    private static isTargetNode(node: any): boolean {\r\n        return typeof node !== \"undefined\" &&\r\n            node.nodeType == 3 &&\r\n            node.nodeValue != null &&\r\n            node.nodeValue.trim() != \"\";\r\n    }\r\n\r\n    /**\r\n     * A valid node is not marked for translation.\r\n     */\r\n    private static isValidNode(node: any): boolean {\r\n        if (typeof node !== \"undefined\" && node.nodeType == 1 && node.attributes) {\r\n            for (const attr of node.attributes) {\r\n                if (attr && this.SELECTOR.test(attr.name)) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n","import {\r\n    ElementRef,\r\n    Input,\r\n    Renderer2,\r\n    AfterViewInit,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { BFS } from './bfs';\r\n\r\nexport abstract class BaseDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    @Input('value') public valueAttribute: string;\r\n\r\n    @Input('innerHTML') public innerHTMLProperty: string;\r\n\r\n    protected key: string;\r\n    protected attributes: any[] = [];\r\n\r\n    protected subscriptions: ISubscription[] = [];\r\n\r\n    private element: any;\r\n    private renderNode: any;\r\n    private nodeValue: string;\r\n\r\n    private textObserver: MutationObserver;\r\n\r\n    private readonly TEXT_MUTATION_CONFIG: any = { subtree: true, characterData: true };\r\n\r\n    private readonly SELECTOR: RegExp = /^l10n-/;\r\n\r\n    constructor(protected el: ElementRef, protected renderer: Renderer2) { }\r\n\r\n    public ngAfterViewInit(): void {\r\n        if (this.el && this.el.nativeElement) {\r\n            this.element = this.el.nativeElement;\r\n            this.renderNode = BFS.getTargetNode(this.element);\r\n            this.getKey();\r\n            this.getAttributes();\r\n            this.addTextListener();\r\n            this.setup();\r\n        }\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (!!this.key) {\r\n            if (this.nodeValue == null || this.nodeValue == \"\") {\r\n                if (!!this.valueAttribute) {\r\n                    this.key = this.valueAttribute;\r\n                } else if (!!this.innerHTMLProperty) {\r\n                    this.key = this.innerHTMLProperty;\r\n                }\r\n            }\r\n            this.replaceText();\r\n        }\r\n        if (this.attributes.length > 0) {\r\n            this.replaceAttributes();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.removeTextListener();\r\n        this.cancelSubscriptions();\r\n    }\r\n\r\n    protected abstract setup(): void;\r\n\r\n    protected abstract replace(): void;\r\n\r\n    protected abstract replaceText(): void;\r\n\r\n    protected abstract replaceAttributes(): void;\r\n\r\n    protected getAttributesData(): any {\r\n        const keys: string[] = this.getAttributesKeys();\r\n        const data: any = {};\r\n        for (const key of keys) {\r\n            data[key] = this.getValues(key);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    protected getAttributesKeys(): string[] {\r\n        return this.attributes.map((attr: any) => attr.key);\r\n    }\r\n\r\n    protected abstract getValues(keys: string | string[]): string | any;\r\n\r\n    protected setText(value: string): void {\r\n        if (!!value) {\r\n            if (!!this.nodeValue && !!this.key) {\r\n                this.removeTextListener();\r\n                this.renderer.setValue(this.renderNode, this.nodeValue.replace(this.key, value));\r\n                this.addTextListener();\r\n            } else if (!!this.valueAttribute) {\r\n                this.renderer.setAttribute(this.element, \"value\", value);\r\n            } else if (!!this.innerHTMLProperty) {\r\n                this.renderer.setProperty(this.element, \"innerHTML\", value);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setAttributes(data: any): void {\r\n        for (const attr of this.attributes) {\r\n            this.renderer.setAttribute(this.element, attr.name, data[attr.key]);\r\n        }\r\n    }\r\n\r\n    private addTextListener(): void {\r\n        if (typeof MutationObserver !== \"undefined\") {\r\n            this.textObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n                this.renderNode = BFS.getTargetNode(this.element);\r\n                this.getKey();\r\n                this.replaceText();\r\n            });\r\n            this.textObserver.observe(this.renderNode, this.TEXT_MUTATION_CONFIG);\r\n        }\r\n    }\r\n\r\n    private removeTextListener(): void {\r\n        if (typeof this.textObserver !== \"undefined\") {\r\n            this.textObserver.disconnect();\r\n        }\r\n    }\r\n\r\n    private getText(): string {\r\n        this.nodeValue = this.renderNode != null ? this.renderNode.nodeValue as string : \"\";\r\n        return !!this.nodeValue ? this.nodeValue.trim() : \"\";\r\n    }\r\n\r\n    private getKey(): void {\r\n        if (this.element.childNodes.length > 0) {\r\n            this.key = this.getText();\r\n        } else if (!!this.valueAttribute) {\r\n            this.key = this.valueAttribute;\r\n        } else if (!!this.innerHTMLProperty) {\r\n            this.key = this.innerHTMLProperty;\r\n        }\r\n    }\r\n\r\n    private getAttributes(): void {\r\n        if (this.element.attributes) {\r\n            for (const attr of this.element.attributes) {\r\n                if (attr && this.SELECTOR.test(attr.name)) {\r\n                    const name: string = attr.name.substr(5);\r\n                    for (const targetAttr of this.element.attributes) {\r\n                        if (new RegExp(\"^\" + name + \"$\").test(targetAttr.name)) {\r\n                            this.attributes.push({ name: name, key: targetAttr.value });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private cancelSubscriptions(): void {\r\n        this.subscriptions.forEach((subscription: ISubscription) => {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { BaseDirective } from '../models/base-directive';\r\n\r\n@Directive({\r\n    selector: '[l10nTranslate],[translate]'\r\n})\r\nexport class TranslateDirective extends BaseDirective {\r\n\r\n    @Input() set l10nTranslate(params: string) {\r\n        this.params = params;\r\n    }\r\n    @Input() set translate(params: string) {\r\n        this.params = params;\r\n    }\r\n\r\n    @Input() public params: string;\r\n\r\n    constructor(protected translation: TranslationService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\r\n\r\n    protected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.translation.translationChanged().subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\r\n\r\n    protected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\r\n\r\n    protected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\r\n\r\n    protected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            const keys: string[] = this.getAttributesKeys();\r\n            this.setAttributes(this.getValues(keys));\r\n        }\r\n    }\r\n\r\n    protected getValues(keys: string | string[]): string | any {\r\n        return this.translation.translate(keys, this.params);\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { BaseDirective } from '../models/base-directive';\r\nimport { L10nDatePipe } from '../pipes/l10n-date.pipe';\r\nimport { DateTimeOptions } from '../models/types';\r\n\r\n@Directive({\r\n    selector: '[l10nDate]'\r\n})\r\nexport class L10nDateDirective extends BaseDirective {\r\n\r\n    @Input() set l10nDate(format: string | DateTimeOptions) {\r\n        this.format = format;\r\n    }\r\n\r\n    @Input() public format: string | DateTimeOptions;\r\n\r\n    private defaultFormat: string = 'mediumDate';\r\n\r\n    private l10nDatePipe: L10nDatePipe = new L10nDatePipe();\r\n\r\n    constructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\r\n\r\n    protected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n        this.subscriptions.push(this.locale.timezoneChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\r\n\r\n    protected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\r\n\r\n    protected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\r\n\r\n    protected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\r\n\r\n    protected getValues(keys: string | string[]): string | any {\r\n        return this.l10nDatePipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.format || this.defaultFormat,\r\n            this.locale.getCurrentTimezone()\r\n        );\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { BaseDirective } from '../models/base-directive';\r\nimport { L10nDecimalPipe, L10nPercentPipe, L10nCurrencyPipe } from '../pipes/l10n-number.pipe';\r\n\r\n@Directive({\r\n    selector: '[l10nDecimal]'\r\n})\r\nexport class L10nDecimalDirective extends BaseDirective {\r\n\r\n    @Input() set l10nDecimal(digits: string) {\r\n        this.digits = digits;\r\n    }\r\n\r\n    @Input() public digits: string;\r\n\r\n    private l10nDecimalPipe: L10nDecimalPipe = new L10nDecimalPipe();\r\n\r\n    constructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\r\n\r\n    protected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\r\n\r\n    protected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\r\n\r\n    protected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\r\n\r\n    protected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\r\n\r\n    protected getValues(keys: string | string[]): string | any {\r\n        return this.l10nDecimalPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.digits\r\n        );\r\n    }\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: '[l10nPercent]'\r\n})\r\nexport class L10nPercentDirective extends BaseDirective {\r\n\r\n    @Input() set l10nPercent(digits: string) {\r\n        this.digits = digits;\r\n    }\r\n\r\n    @Input() public digits: string;\r\n\r\n    private l10nPercentPipe: L10nPercentPipe = new L10nPercentPipe();\r\n\r\n    constructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\r\n\r\n    protected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\r\n\r\n    protected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\r\n\r\n    protected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\r\n\r\n    protected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\r\n\r\n    protected getValues(keys: string | string[]): string | any {\r\n        return this.l10nPercentPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.digits\r\n        );\r\n    }\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: '[l10nCurrency]'\r\n})\r\nexport class L10nCurrencyDirective extends BaseDirective {\r\n\r\n    @Input() set l10nCurrency(digits: string) {\r\n        this.digits = digits;\r\n    }\r\n\r\n    @Input() public currencyDisplay: 'code' | 'symbol' | 'name';\r\n\r\n    @Input() public digits: string;\r\n\r\n    private l10nCurrencyPipe: L10nCurrencyPipe = new L10nCurrencyPipe();\r\n\r\n    constructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\r\n\r\n    protected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n        this.subscriptions.push(this.locale.currencyCodeChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\r\n\r\n    protected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\r\n\r\n    protected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\r\n\r\n    protected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\r\n\r\n    protected getValues(keys: string | string[]): string | any {\r\n        return this.l10nCurrencyPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.locale.getCurrentCurrency(),\r\n            this.currencyDisplay,\r\n            this.digits\r\n        );\r\n    }\r\n\r\n}\r\n","import { Directive, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, FormControl, Validator, ValidatorFn, ValidationErrors } from '@angular/forms';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { LocaleValidation } from '../services/locale-validation';\r\nimport { InjectorRef } from '../models/injector-ref';\r\n\r\n/**\r\n * Function that takes a control and returns either null when it’s valid, or an error object if it’s not.\r\n * @param digits The format of the number\r\n * @param MIN_VALUE The minimum value for the number\r\n * @param MAX_VALUE The maximum value for the number\r\n * @return An error object: 'format', 'minValue' or 'maxValue'; null in case the value is valid\r\n */\r\nexport function l10nValidateNumber(\r\n    digits: string,\r\n    MIN_VALUE: number = Number.MIN_VALUE,\r\n    MAX_VALUE: number = Number.MAX_VALUE\r\n): ValidatorFn {\r\n\r\n    const locale: LocaleService = InjectorRef.get(LocaleService);\r\n    const localeValidation: LocaleValidation = InjectorRef.get(LocaleValidation);\r\n\r\n    let defaultLocale: string;\r\n    let NUMBER_REGEXP: RegExp;\r\n\r\n    return (formControl: FormControl): ValidationErrors | null => {\r\n        if (formControl.value == null || formControl.value == \"\") return null;\r\n\r\n        if (defaultLocale != locale.getDefaultLocale()) {\r\n            NUMBER_REGEXP = localeValidation.getRegExp(digits);\r\n            defaultLocale = locale.getDefaultLocale();\r\n        }\r\n\r\n        if (NUMBER_REGEXP.test(formControl.value)) {\r\n            const parsedValue: number | null = localeValidation.parseNumber(formControl.value);\r\n            if (parsedValue != null && parsedValue < MIN_VALUE) {\r\n                return {\r\n                    minValue: {\r\n                        valid: false\r\n                    }\r\n                };\r\n            } else if (parsedValue != null && parsedValue > MAX_VALUE) {\r\n                return {\r\n                    maxValue: {\r\n                        valid: false\r\n                    }\r\n                };\r\n            }\r\n            return null; // The number is valid.\r\n        } else {\r\n            return {\r\n                format: {\r\n                    valid: false\r\n                }\r\n            };\r\n        }\r\n    };\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: '[l10nValidateNumber][ngModel],[l10nValidateNumber][formControl]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => L10nNumberValidatorDirective), multi: true }\r\n    ]\r\n})\r\nexport class L10nNumberValidatorDirective implements Validator, OnInit {\r\n\r\n    /**\r\n     * Format: {minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}.\r\n     */\r\n    @Input() set l10nValidateNumber(digits: string) {\r\n        this.digits = digits;\r\n    }\r\n\r\n    @Input() public digits: string;\r\n\r\n    @Input() public minValue: number;\r\n    @Input() public maxValue: number;\r\n\r\n    private readonly MIN_VALUE: number = Number.MIN_VALUE;\r\n    private readonly MAX_VALUE: number = Number.MAX_VALUE;\r\n\r\n    private validator: ValidatorFn;\r\n\r\n    public ngOnInit(): void {\r\n        this.validator = l10nValidateNumber(\r\n            this.digits,\r\n            this.minValue || this.MIN_VALUE,\r\n            this.maxValue || this.MAX_VALUE\r\n        );\r\n    }\r\n\r\n    public validate(formControl: FormControl): ValidationErrors | null {\r\n        return this.validator(formControl);\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { LOCALE_CONFIG, TRANSLATION_CONFIG, L10nConfig, Token } from '../models/l10n-config';\r\nimport { L10nLoader } from '../services/l10n-loader';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { LocaleStorage, BrowserStorage } from '../services/locale-storage';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { TranslationProvider, HttpTranslationProvider } from '../services/translation-provider';\r\nimport { TranslationHandler, DefaultTranslationHandler } from '../services/translation-handler';\r\nimport { TranslatePipe } from '../pipes/translate.pipe';\r\nimport { TranslateDirective } from '../directives/translate.directive';\r\n\r\n/**\r\n * Provides dependencies, pipes & directives for translating messages.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        TranslatePipe,\r\n        TranslateDirective\r\n    ],\r\n    exports: [\r\n        TranslatePipe,\r\n        TranslateDirective\r\n    ]\r\n})\r\nexport class TranslationModule {\r\n\r\n    /**\r\n     * Use in AppModule: new instances of LocaleService & TranslationService.\r\n     */\r\n    public static forRoot(l10nConfig: L10nConfig, token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TranslationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                { provide: LOCALE_CONFIG, useValue: l10nConfig.locale || {} },\r\n                { provide: TRANSLATION_CONFIG, useValue: l10nConfig.translation || {} },\r\n                LocaleService,\r\n                {\r\n                    provide: LocaleStorage,\r\n                    useClass: token.localeStorage || BrowserStorage\r\n                },\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                },\r\n                L10nLoader\r\n            ]\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Use in feature modules with lazy loading: new instance of TranslationService.\r\n     */\r\n    public static forChild(l10nConfig: L10nConfig, token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TranslationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                { provide: TRANSLATION_CONFIG, useValue: l10nConfig.translation || {} },\r\n                TranslationService,\r\n                L10nLoader\r\n            ]\r\n        };\r\n    }\r\n\r\n    constructor(private injector: InjectorRef) {\r\n        // Creates the instance of the InjectorRef, so that module dependencies are available.\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { TranslationModule } from './translation.module';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { LOCALE_CONFIG, TRANSLATION_CONFIG, L10nConfig, Token } from '../models/l10n-config';\r\nimport { L10nLoader } from '../services/l10n-loader';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { LocaleStorage, BrowserStorage } from '../services/locale-storage';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { TranslationProvider, HttpTranslationProvider } from '../services/translation-provider';\r\nimport { TranslationHandler, DefaultTranslationHandler } from '../services/translation-handler';\r\nimport { L10nDatePipe } from '../pipes/l10n-date.pipe';\r\nimport { L10nDecimalPipe, L10nPercentPipe, L10nCurrencyPipe } from '../pipes/l10n-number.pipe';\r\nimport { L10nDateDirective } from '../directives/l10n-date.directive';\r\nimport {\r\n    L10nDecimalDirective,\r\n    L10nPercentDirective,\r\n    L10nCurrencyDirective\r\n} from '../directives/l10n-number.directive';\r\n\r\n/**\r\n * Provides dependencies, pipes & directives for translating messages, dates & numbers.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        L10nDatePipe,\r\n        L10nDecimalPipe,\r\n        L10nPercentPipe,\r\n        L10nCurrencyPipe,\r\n        L10nDateDirective,\r\n        L10nDecimalDirective,\r\n        L10nPercentDirective,\r\n        L10nCurrencyDirective\r\n    ],\r\n    imports: [\r\n        TranslationModule\r\n    ],\r\n    exports: [\r\n        TranslationModule,\r\n        L10nDatePipe,\r\n        L10nDecimalPipe,\r\n        L10nPercentPipe,\r\n        L10nCurrencyPipe,\r\n        L10nDateDirective,\r\n        L10nDecimalDirective,\r\n        L10nPercentDirective,\r\n        L10nCurrencyDirective\r\n    ]\r\n})\r\nexport class LocalizationModule {\r\n\r\n    /**\r\n     * Use in AppModule: new instances of LocaleService & TranslationService.\r\n     */\r\n    public static forRoot(l10nConfig: L10nConfig, token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocalizationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                { provide: LOCALE_CONFIG, useValue: l10nConfig.locale || {} },\r\n                { provide: TRANSLATION_CONFIG, useValue: l10nConfig.translation || {} },\r\n                LocaleService,\r\n                {\r\n                    provide: LocaleStorage,\r\n                    useClass: token.localeStorage || BrowserStorage\r\n                },\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                },\r\n                L10nLoader\r\n            ]\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Use in feature modules with lazy loading: new instance of TranslationService.\r\n     */\r\n    public static forChild(l10nConfig: L10nConfig, token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocalizationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                { provide: TRANSLATION_CONFIG, useValue: l10nConfig.translation || {} },\r\n                TranslationService,\r\n                L10nLoader\r\n            ]\r\n        };\r\n    }\r\n\r\n    constructor(private injector: InjectorRef) {\r\n        // Creates the instance of the InjectorRef, so that module dependencies are available.\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { LocaleValidation } from '../services/locale-validation';\r\nimport { L10nNumberValidatorDirective } from '../directives/l10n-number-validator.directive';\r\n\r\n/**\r\n * Provides dependencies & directives for locale validation.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        L10nNumberValidatorDirective\r\n    ],\r\n    exports: [\r\n        L10nNumberValidatorDirective\r\n    ]\r\n})\r\nexport class LocaleValidationModule {\r\n\r\n    /**\r\n     * Use in AppModule: new instance of LocaleValidation.\r\n     */\r\n    public static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocaleValidationModule,\r\n            providers: [LocaleValidation]\r\n        };\r\n    }\r\n\r\n}\r\n"],"names":["Injectable","Injector","InjectionToken","Inject","EventEmitter","Subject","Output","http","ReplaySubject","HttpClient","BehaviorSubject","Observable","merge","concat","ChangeDetectorRef","tslib_1.__extends","Pipe","Input","Directive","ElementRef","Renderer2","NG_VALIDATORS","forwardRef","NgModule"],"mappings":"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"}